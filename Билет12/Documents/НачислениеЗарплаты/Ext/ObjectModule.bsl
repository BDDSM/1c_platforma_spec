
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ОсновныеНачисления.Записывать = Истина;
	Движения.ДополнительныеНачисления.Записывать = Истина;
	Движения.Пробег.Записывать = Истина;
	Движения.Пробег.Записать();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.Пробег");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ДополнительныеНачисления;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Сотрудник", "Сотрудник");
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачислениеЗарплатыОсновныеНачисления.Сотрудник КАК Сотрудник,
	|	НачислениеЗарплатыОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	НачислениеЗарплатыОсновныеНачисления.ДатаНачала КАК ДатаНачала,
	|	НачислениеЗарплатыОсновныеНачисления.ДатаОкончания КАК ДатаОкончания,
	|	0 КАК Размер,
	|	1 КАК ПорядокОбхода
	|ПОМЕСТИТЬ ВТ_ДанныеДок
	|ИЗ
	|	Документ.НачислениеЗарплаты.ОсновныеНачисления КАК НачислениеЗарплатыОсновныеНачисления
	|ГДЕ
	|	НачислениеЗарплатыОсновныеНачисления.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НачислениеЗарплатыДополнительныеНачисления.Сотрудник,
	|	НачислениеЗарплатыДополнительныеНачисления.ВидРасчета,
	|	NULL,
	|	NULL,
	|	НачислениеЗарплатыДополнительныеНачисления.Размер,
	|	2
	|ИЗ
	|	Документ.НачислениеЗарплаты.ДополнительныеНачисления КАК НачислениеЗарплатыДополнительныеНачисления
	|ГДЕ
	|	НачислениеЗарплатыДополнительныеНачисления.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДок.Сотрудник КАК Сотрудник,
	|	ВТ_ДанныеДок.ВидРасчета КАК ВидРасчета,
	|	ВТ_ДанныеДок.ДатаНачала КАК ДатаНачала,
	|	ВТ_ДанныеДок.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_ДанныеДок.Размер КАК Размер,
	|	ПробегОстатки.ЗначениеОстаток КАК Пробег,
	|	ВТ_ДанныеДок.ПорядокОбхода КАК ПорядокОбхода
	|ИЗ
	|	ВТ_ДанныеДок КАК ВТ_ДанныеДок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Пробег.Остатки(
	|				&ГраницаПериодаРегистрации,
	|				Сотрудник В
	|					(ВЫБРАТЬ
	|						ВТ_ДанныеДок.Сотрудник КАК Сотрудник
	|					ИЗ
	|						ВТ_ДанныеДок КАК ВТ_ДанныеДок
	|					ГДЕ
	|						ВТ_ДанныеДок.ВидРасчета = &Компенсация)) КАК ПробегОстатки
	|		ПО ВТ_ДанныеДок.Сотрудник = ПробегОстатки.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_ДанныеДок.ПорядокОбхода";
	
	Запрос.УстановитьПараметр("ГраницаПериодаРегистрации", Новый Граница(КонецМесяца(ПериодРегистрации), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Компенсация", ПланыВидовРасчета.ДополнительныеНачисления.Компенсация);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ПорядокОбхода = 1 Тогда
			
			Движение = Движения.ОсновныеНачисления.Добавить();
			Движение.Сторно = Ложь;
			Движение.ВидРасчета = Выборка.ВидРасчета;
			Движение.ПериодДействияНачало = Выборка.ДатаНачала;
			Движение.ПериодДействияКонец = КонецДня(Выборка.ДатаОкончания);
			Движение.ПериодРегистрации = ПериодРегистрации;
			Движение.Сотрудник = Выборка.Сотрудник;
			Если выборка.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.НеВыход Тогда
				Движение.Параметр1 = 5000;
			КонецЕсли;
			
		Иначе
			
			Если Выборка.Пробег >= 1000 Тогда
				
				Движение = Движения.ДополнительныеНачисления.Добавить();
				Движение.Сторно = Ложь;
				Движение.ВидРасчета = Выборка.ВидРасчета;
				Движение.ПериодРегистрации = ПериодРегистрации;
				Движение.БазовыйПериодНачало = НачалоМесяца(ПериодРегистрации);
				Движение.БазовыйПериодКонец = КонецМесяца(ПериодРегистрации);
				Движение.Сотрудник = Выборка.Сотрудник;
				Движение.Параметр1 = Выборка.Размер / 100;
				Движение.Параметр2 = Выборка.Пробег;
			
				Движение = Движения.Пробег.Добавить();
				Движение.Сотрудник   = Выборка.Сотрудник;
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Период 	 = КонецМесяца(ПериодРегистрации);
				Движение.Значение    = 1000;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.Записать();
	
	РассчитатьНеВыход();
	РассчитатьОклад();
	РассчитатьКомпенсацию();
	
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры


Процедура РассчитатьНеВыход()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ОсновныеНачисленияДанныеГрафика.ЗначениеДниФактическийПериодДействия КАК ДниФакт
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
	|			Регистратор = &Регистратор
	|				И ВидРасчета = &ВидРасчета) КАК ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ОсновныеНачисления.НеВыход);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для каждого Движение Из Движения.ОсновныеНачисления Цикл
	
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.НеВыход Тогда
		
			Продолжить;	
		
		КонецЕсли;
		
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки") Тогда
		
			Движение.Параметр2 = Выборка.ДниФакт;
			
			Движение.Результат = Выборка.ДниФакт * Движение.Параметр1; 
		
		КонецЕсли;
		
	КонецЦикла;

	Движения.ОсновныеНачисления.Записать();
	
КонецПроцедуры

Процедура РассчитатьОклад()


	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК ЧасыФакт,
	|	ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТ_ДанныеГрафика
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
	|			Регистратор = &Регистратор
	|				И ВидРасчета = &ВидРасчета) КАК ОсновныеНачисленияДанныеГрафика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ВТ_ДанныеГрафика.ЧасыФакт КАК ЧасыФакт,
	|	ЕСТЬNULL(СведенияОСотрудникахСрезПоследних.Оклад, 0) КАК Оклад
	|ИЗ
	|	ВТ_ДанныеГрафика КАК ВТ_ДанныеГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСотрудниках.СрезПоследних(
	|				&ПериодРегистрации,
	|				Сотрудник В
	|					(ВЫБРАТЬ
	|						ВТ_ДанныеГрафика.Сотрудник КАК Сотрудник
	|					ИЗ
	|						ВТ_ДанныеГрафика КАК ВТ_ДанныеГрафика)) КАК СведенияОСотрудникахСрезПоследних
	|		ПО ВТ_ДанныеГрафика.Сотрудник = СведенияОСотрудникахСрезПоследних.Сотрудник";
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для каждого Движение Из Движения.ОсновныеНачисления Цикл
	
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.Оклад Тогда
		
			Продолжить;	
		
		КонецЕсли;
		
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки") Тогда
		
			Движение.Параметр1 = Выборка.ЧасыФакт;
			Движение.Параметр2 = Выборка.Оклад;
			
			Движение.Результат = Выборка.Оклад * Выборка.ЧасыФакт; 
		
		КонецЕсли;
		
	
	КонецЦикла;

	Движения.ОсновныеНачисления.Записать();
	
КонецПроцедуры

Процедура РассчитатьКомпенсацию()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДополнительныеНачисленияБазаОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисленияБазаОсновныеНачисления.РезультатБаза КАК РезультатБаза
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисления.БазаОсновныеНачисления(&Измерения, &Измерения, , Регистратор = &Регистратор) КАК ДополнительныеНачисленияБазаОсновныеНачисления";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для каждого Движение Из Движения.ДополнительныеНачисления Цикл
	
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ДополнительныеНачисления.Компенсация Тогда
		
			Продолжить;	
		
		КонецЕсли;
		
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки") Тогда
		
			Движение.Параметр3 = Выборка.РезультатБаза;
			
			Движение.Результат = Движение.Параметр1 * Выборка.РезультатБаза; 
		
		КонецЕсли;
		
	
	КонецЦикла;

	Движения.ДополнительныеНачисления.Записать();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	ПериодРегистрации = НачалоМесяца(ПериодРегистрации);
КонецПроцедуры


