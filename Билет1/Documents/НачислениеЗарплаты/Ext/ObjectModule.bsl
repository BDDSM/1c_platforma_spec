
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	ПериодРегистрации = НачалоМесяца(ПериодРегистрации);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ЗаписатьДвиженияДокумента();
	
	Если ОсновныеНачисления.Количество() > 0 
		И ОсновныеНачисления.Итог("Результат") = 0 Тогда
		РассчитатьОклад();
	КонецЕсли;
	
	Если ДополнительныеНачисления.Количество() > 0 
		И ДополнительныеНачисления.Итог("Результат") = 0 Тогда
		РассчитатьПремию();
	КонецЕсли;
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
КонецПроцедуры

Процедура ЗаписатьДвиженияДокумента() Экспорт
	
	Движения.ОсновныеНачисления.Записывать = Истина;
	Движения.ДополнительныеНачисления.Записывать = Истина;
	
	Для Каждого ТекСтрокаОсновныеНачисления Из ОсновныеНачисления Цикл
		Движение = Движения.ОсновныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаОсновныеНачисления.ВидРасчета;
		Движение.ПериодДействияНачало = ТекСтрокаОсновныеНачисления.ДатаНачала;
		Движение.ПериодДействияКонец = КонецДня(ТекСтрокаОсновныеНачисления.ДатаОкончания);
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.Сотрудник = ТекСтрокаОсновныеНачисления.Сотрудник;
		Движение.Результат = ТекСтрокаОсновныеНачисления.Результат;
		Движение.ГрафикРаботы = ТекСтрокаОсновныеНачисления.ГрафикРаботы;
	КонецЦикла;
	
	Для Каждого ТекСтрокаДополнительныеНачисления Из ДополнительныеНачисления Цикл
		Движение = Движения.ДополнительныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаДополнительныеНачисления.ВидРасчета;
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.БазовыйПериодНачало = НачалоМесяца(ПериодРегистрации);
		Движение.БазовыйПериодКонец = КонецМесяца(ПериодРегистрации);
		Движение.Сотрудник = ТекСтрокаДополнительныеНачисления.Сотрудник;
		Движение.Результат = ТекСтрокаДополнительныеНачисления.Результат;
		Движение.Параметр = ТекСтрокаДополнительныеНачисления.Параметр;
		Движение.Стаж = ТекСтрокаДополнительныеНачисления.Стаж;
	КонецЦикла;
	
	Движения.Записать();
	
КонецПроцедуры

Процедура ЗаписатьПустыеДвиженияДокумента() Экспорт
	
	Движения.ОсновныеНачисления.Очистить();
	Движения.ОсновныеНачисления.Записать();
	
	Движения.ДополнительныеНачисления.Очистить();
	Движения.ДополнительныеНачисления.Записать();
	
КонецПроцедуры

Процедура РассчитатьОклад() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачислениеЗарплатыОсновныеНачисления.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТ_ДанныеДок
		|ИЗ
		|	Документ.НачислениеЗарплаты.ОсновныеНачисления КАК НачислениеЗарплатыОсновныеНачисления
		|ГДЕ
		|	НачислениеЗарплатыОсновныеНачисления.Ссылка = &Ссылка
		|	И НачислениеЗарплатыОсновныеНачисления.ВидРасчета = &ВидРасчета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеДок.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(СведенияОСотрудникахСрезПоследних.Оклад, 0) КАК Оклад
		|ПОМЕСТИТЬ ВТ_Оклад
		|ИЗ
		|	ВТ_ДанныеДок КАК ВТ_ДанныеДок
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСотрудниках.СрезПоследних(
		|				&ПериодРегистрации,
		|				Сотрудник В
		|					(ВЫБРАТЬ
		|						ВТ_ДанныеДок.Сотрудник КАК Сотрудник
		|					ИЗ
		|						ВТ_ДанныеДок КАК ВТ_ДанныеДок)) КАК СведенияОСотрудникахСрезПоследних
		|		ПО ВТ_ДанныеДок.Сотрудник = СведенияОСотрудникахСрезПоследних.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК ДниПлан,
		|	ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК ДниФакт,
		|	ВТ_Оклад.Оклад КАК Оклад
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка) КАК ОсновныеНачисленияДанныеГрафика
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Оклад КАК ВТ_Оклад
		|		ПО ОсновныеНачисленияДанныеГрафика.Сотрудник = ВТ_Оклад.Сотрудник";
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для каждого Движение Из Движения.ОсновныеНачисления Цикл
		
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.Оклад Тогда
			
			Продолжить;			
		
		КонецЕсли;
		
	    Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки") Тогда
			
			Если Выборка.ДниПлан = 0 Тогда
				
				Результат = 0;
				
			ИначеЕсли Выборка.ДниПлан = Выборка.ДниФакт Тогда  
				
				Результат = Выборка.Оклад;
				
			Иначе
				
				ДневнаяСтавка = ?(Выборка.ДниПлан = 0, 0, Выборка.Оклад / Выборка.ДниПлан); 
				Результат = Окр(ДневнаяСтавка, 2) * Выборка.ДниФакт;  
				
			КонецЕсли;
			
			Движение.Результат = Результат;
			
			СтрокаТЧ = ОсновныеНачисления[Движение.НомерСтроки-1];
			СтрокаТЧ.Результат = Движение.Результат; 
			
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ОсновныеНачисления.Записать();

КонецПроцедуры

Процедура РассчитатьПремию() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачислениеЗарплатыДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	РАЗНОСТЬДАТ(НачислениеЗарплатыДополнительныеНачисления.Сотрудник.ДатаПриема, НачислениеЗарплатыДополнительныеНачисления.Ссылка.ПериодРегистрации, ГОД) КАК Стаж
		|ПОМЕСТИТЬ ВТ_ДанныеДок
		|ИЗ
		|	Документ.НачислениеЗарплаты.ДополнительныеНачисления КАК НачислениеЗарплатыДополнительныеНачисления
		|ГДЕ
		|	НачислениеЗарплатыДополнительныеНачисления.Ссылка = &Ссылка
		|	И НачислениеЗарплатыДополнительныеНачисления.ВидРасчета = &ВидРасчета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеДок.Сотрудник КАК Сотрудник,
		|	ВТ_ДанныеДок.Стаж КАК Стаж,
		|	ЕСТЬNULL(ШкалаПремий.Значение, 0) КАК Значение
		|ПОМЕСТИТЬ ВТ_Премия
		|ИЗ
		|	ВТ_ДанныеДок КАК ВТ_ДанныеДок
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШкалаПремий КАК ШкалаПремий
		|		ПО ВТ_ДанныеДок.Сотрудник = ШкалаПремий.Сотрудник
		|ГДЕ
		|	ВТ_ДанныеДок.Стаж >= ШкалаПремий.От
		|	И (ВТ_ДанныеДок.Стаж < ШкалаПремий.До
		|			ИЛИ ШкалаПремий.До = 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДополнительныеНачисленияБазаОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисленияБазаОсновныеНачисления.РезультатБаза КАК РезультатБаза,
		|	ЕСТЬNULL(ВТ_Премия.Стаж, 0) КАК Стаж,
		|	ЕСТЬNULL(ВТ_Премия.Значение, 0) КАК ПроцентПремии
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисления.БазаОсновныеНачисления(&Измерения, &Измерения, , Регистратор = &Ссылка) КАК ДополнительныеНачисленияБазаОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Премия КАК ВТ_Премия
		|		ПО ДополнительныеНачисленияБазаОсновныеНачисления.Сотрудник = ВТ_Премия.Сотрудник";
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ДополнительныеНачисления.Премия);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для каждого Движение Из Движения.ДополнительныеНачисления Цикл
		
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ДополнительныеНачисления.Премия Тогда
			
			Продолжить;			
		
		КонецЕсли;
		
	    Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки") Тогда
			
			КоэфПремии = ?(Выборка.ПроцентПремии = 0, 0, Выборка.ПроцентПремии / 100); 
			Результат = КоэфПремии * Выборка.РезультатБаза;  
			
			Движение.Результат = Результат;
			Движение.Параметр = Выборка.ПроцентПремии;
			Движение.Стаж = Выборка.Стаж;
			
			
			СтрокаТЧ = ДополнительныеНачисления[Движение.НомерСтроки-1];
			СтрокаТЧ.Результат = Движение.Результат; 
			СтрокаТЧ.Параметр = Движение.Параметр; 
			СтрокаТЧ.Стаж = Движение.Стаж; 
			
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ДополнительныеНачисления.Записать();

КонецПроцедуры


