
Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.Управленческий.Записывать = Истина;
	Движения.Управленческий.Записать();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрБухгалтерии.Управленческий");
	ЭлементБлокировки.УстановитьЗначение("Счет", ПланыСчетов.Управленческий.Товары);
	ЭлементБлокировки.УстановитьЗначение(ПланыВидовХарактеристик.ВидыСубконто.Склады, Склад);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = СписокНоменклатуры;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура, "Номенклатура");
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Количество) КАК Количество,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Сумма) КАК СуммаПродажи,
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура.ЭтоКомплект КАК НоменклатураЭтоКомплект
		|ПОМЕСТИТЬ ВТ_ДанныеДок
		|ИЗ
		|	Документ.РасходнаяНакладная.СписокНоменклатуры КАК РасходнаяНакладнаяСписокНоменклатуры
		|ГДЕ
		|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура,
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура.ЭтоКомплект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоставКомплекта.Номенклатура КАК Номенклатура,
		|	ISNULL(СоставКомплекта.Количество, 0) * ВТ_ДанныеДок.Количество КАК Количество,
		|	ВЫБОР
		|		КОГДА СоставКомплекта.Количество <> 0
		|			ТОГДА ВТ_ДанныеДок.СуммаПродажи / СоставКомплекта.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаПродажи,
		|	СоставКомплекта.Комплект КАК Комплект
		|ПОМЕСТИТЬ ВТ_СоставКомплекта
		|ИЗ
		|	ВТ_ДанныеДок КАК ВТ_ДанныеДок
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставКомплекта КАК СоставКомплекта
		|		ПО ВТ_ДанныеДок.Номенклатура = СоставКомплекта.Комплект
		|ГДЕ
		|	ВТ_ДанныеДок.НоменклатураЭтоКомплект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
		|	СУММА(ВложенныйЗапрос.СуммаПродажи) КАК СуммаПродажи,
		|	ВложенныйЗапрос.Комплект КАК Комплект
		|ПОМЕСТИТЬ ВТ_ДанныеДляСписания
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ДанныеДок.Номенклатура КАК Номенклатура,
		|		ВТ_ДанныеДок.Количество КАК Количество,
		|		ВТ_ДанныеДок.СуммаПродажи КАК СуммаПродажи,
		|		ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Комплект
		|	ИЗ
		|		ВТ_ДанныеДок КАК ВТ_ДанныеДок
		|	ГДЕ
		|		НЕ ВТ_ДанныеДок.НоменклатураЭтоКомплект
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_СоставКомплекта.Номенклатура,
		|		ВТ_СоставКомплекта.Количество,
		|		ВТ_СоставКомплекта.СуммаПродажи,
		|		ВТ_СоставКомплекта.Комплект
		|	ИЗ
		|		ВТ_СоставКомплекта КАК ВТ_СоставКомплекта) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Комплект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеДляСписания.Номенклатура КАК Номенклатура,
		|	ВТ_ДанныеДляСписания.Номенклатура.Представление КАК НоменклатураПредставление,
		|	ВТ_ДанныеДляСписания.Количество КАК Количество,
		|	ВТ_ДанныеДляСписания.СуммаПродажи КАК СуммаПродажи,
		|	isnull(УправленческийОстатки.КоличествоОстаток, 0) КАК КоличествоПартии,
		|	isnull(УправленческийОстатки.СуммаОстаток, 0) КАК СебестоимостьПартии,
		|	ВТ_ДанныеДляСписания.Комплект КАК Комплект
		|ИЗ
		|	ВТ_ДанныеДляСписания КАК ВТ_ДанныеДляСписания
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Остатки(
		|				&МоментВремени,
		|				Счет = &СчетТовары,
		|				&СубконтоСкладНоменклатура,
		|				Субконто1 = &Склад
		|					И Субконто2 В
		|						(ВЫБРАТЬ
		|							ВТ_ДанныеДляСписания.Номенклатура КАК Номенклатура
		|						ИЗ
		|							ВТ_ДанныеДляСписания КАК ВТ_ДанныеДляСписания)) КАК УправленческийОстатки
		|		ПО ВТ_ДанныеДляСписания.Номенклатура = УправленческийОстатки.Субконто2
		|ИТОГИ
		|	СУММА(Количество),
		|	Максимум(КоличествоПартии),
		|	Максимум(СебестоимостьПартии)
		|ПО
		|	Номенклатура";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	СубконтоСкладНоменклатура = Новый Массив;
	СубконтоСкладНоменклатура.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Склады);
	СубконтоСкладНоменклатура.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура);
	Запрос.УстановитьПараметр("СубконтоСкладНоменклатура", СубконтоСкладНоменклатура);
	Запрос.УстановитьПараметр("СчетТовары", ПланыСчетов.Управленческий.Товары);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		НеХватает = ВыборкаНоменклатура.Количество - ВыборкаНоменклатура.КоличествоПартии;
		Если НеХватает > 0 Тогда
			
			Отказ = Истина;
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон("Не хватает товара: %1 в количестве: %2", ВыборкаНоменклатура.НоменклатураПредставление, НеХватает);
			Сообщение.Сообщить();
			
		КонецЕсли;
		
		Если Отказ Тогда
			Продолжить;
		КонецЕсли;
		
		ИтогоСписать = ВыборкаНоменклатура.Количество;
		Списано = 0;
	    СписаноСумма = 0;
		
		ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
	
		Пока ИтогоСписать > 0 И ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			КоличествоСписать = ВыборкаДетальныеЗаписи.Количество;
			ИтогоСписать = ИтогоСписать - КоличествоСписать;
			
			Себестоимость = ?(КоличествоСписать = (ВыборкаНоменклатура.КоличествоПартии - Списано),
				ВыборкаНоменклатура.СебестоимостьПартии - СписаноСумма,
				КоличествоСписать * ВыборкаНоменклатура.СебестоимостьПартии / ВыборкаНоменклатура.КоличествоПартии);
				
			АналитикаПродажиУбытки = ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Комплект), 
				ВыборкаДетальныеЗаписи.Комплект, ВыборкаДетальныеЗаписи.Номенклатура);
				
			Движение = Движения.Управленческий.Добавить();
			Движение.СчетДт = ПланыСчетов.Управленческий.ПрибылиУбытки;
			Движение.СчетКт = ПланыСчетов.Управленческий.Товары;
			Движение.Период = Дата;
			Движение.Сумма = Себестоимость;
			Движение.Количество = КоличествоСписать;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = АналитикаПродажиУбытки;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Склады] = Склад;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = ВыборкаДетальныеЗаписи.Номенклатура;
			
			Списано = Списано + Движение.Количество;
			СписаноСумма = СписаноСумма + Движение.Сумма;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Для Каждого ТекСтрокаСписокНоменклатуры Из СписокНоменклатуры Цикл
		Движение = Движения.Управленческий.Добавить();
		Движение.СчетДт = ПланыСчетов.Управленческий.Покупатели;
		Движение.СчетКт = ПланыСчетов.Управленческий.ПрибылиУбытки;
		Движение.Период = Дата;
		Движение.Сумма = ТекСтрокаСписокНоменклатуры.Сумма;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = ТекСтрокаСписокНоменклатуры.Номенклатура;
	КонецЦикла;

	// регистр Продажи 
	Движения.Продажи.Записывать = Истина;
	Движение = Движения.Продажи.Добавить();
	Движение.Период = Дата;
	Движение.Бригада = Бригада;
	Движение.Сумма = СуммаПоДокументу;

	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаПоДокументу = СписокНоменклатуры.Итог("Сумма");
КонецПроцедуры
