
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.НоменклатураВЭксплуатации.Записывать = Истина;
	Движения.ОстаткиНоменклатуры.Записывать = Истина;
	Движения.ОстаткиНоменклатуры.Записать();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
	ЭлементБлокировки.УстановитьЗначение("Номенклатура", Номенклатура);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиНоменклатурыОстатки.СрокГодности КАК СрокГодности,
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ОстаткиНоменклатурыОстатки.СуммаОстаток КАК СуммаОстаток,
		|	ОстаткиНоменклатурыОстатки.Номенклатура.СрокЭксплуатации КАК НоменклатураСрокЭксплуатации
		|ИЗ
		|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(&МоментВремени, Номенклатура = &Номенклатура) КАК ОстаткиНоменклатурыОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	СрокГодности
		|ИТОГИ
		|	СУММА(КоличествоОстаток),
		|	СУММА(СуммаОстаток)
		|ПО
		|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаОбщийИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаОбщийИтог.Следующий();
	
	НеХватает = Количество - ВыборкаОбщийИтог.КоличествоОстаток;
	Если НеХватает > 0 Тогда
		
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("Не хватает товара в количестве: %1", НеХватает);
		Сообщение.Сообщить();
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = ВыборкаОбщийИтог.Выбрать();
	
	ИтогоСписать = Количество;
	Списано = 0;
	СписаноСумма = 0;
	ЧислоСекундВСутках = 86400;
	Пока ИтогоСписать > 0 И ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.СрокГодности <= НачалоДня(Дата) Тогда
			Продолжить;
		КонецЕсли;
		
		КоличествоСписать = МИН(ИтогоСписать, ВыборкаДетальныеЗаписи.КоличествоОстаток);
		
		ИтогоСписать = ИтогоСписать - КоличествоСписать;
		СрокЭксплуатации = Дата + ЧислоСекундВСутках * ВыборкаДетальныеЗаписи.НоменклатураСрокЭксплуатации;
		
		Себестоимость = ?(КоличествоСписать = (ВыборкаОбщийИтог.КОличествоОстаток - Списано),
			ВыборкаОбщийИтог.СуммаОстаток - СписаноСумма,
			КоличествоСписать * ВыборкаОбщийИтог.СуммаОстаток / ВыборкаОбщийИтог.КоличествоОстаток);
		
		Движение = Движения.ОстаткиНоменклатуры.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = Номенклатура;
		Движение.СрокГодности = ВыборкаДетальныеЗаписи.СрокГодности;
		Движение.Количество = КоличествоСписать;
		Движение.Сумма = Себестоимость;
		
		Движение = Движения.НоменклатураВЭксплуатации.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Номенклатура = Номенклатура;
		Движение.СрокГодности = ВыборкаДетальныеЗаписи.СрокГодности;
		Движение.СрокЭксплуатации = СрокЭксплуатации;
		Движение.Количество = КоличествоСписать;
		Движение.Сумма = Себестоимость;
		
		Списано = Списано + КоличествоСписать;
		СписаноСумма = СписаноСумма + Себестоимость;
		
	КонецЦикла;
	
	НеХватает = Количество - Списано;
	Если НеХватает > 0 Тогда
		
		Отказ = Истина;
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("Не хватает товара с нужным срокого годности в количестве: %1", НеХватает);
		Сообщение.Сообщить();
		
	КонецЕсли;
	
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
КонецПроцедуры
