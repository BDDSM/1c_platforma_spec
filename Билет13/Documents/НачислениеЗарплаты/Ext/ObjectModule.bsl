
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// регистр ОсновныеНачисления
	Движения.ОсновныеНачисления.Записывать = Истина;
	Движения.ДополнительныеНачисления.Записывать = Истина;
	
	Для Каждого ТекСтрокаОсновныеНачисления Из ОсновныеНачисления Цикл
		Движение = Движения.ОсновныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаОсновныеНачисления.ВидРасчета;
		Движение.ПериодДействияНачало = ТекСтрокаОсновныеНачисления.ДатаНачала;
		Движение.ПериодДействияКонец = КонецДня(ТекСтрокаОсновныеНачисления.ДатаОкончания);
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.Сотрудник = ТекСтрокаОсновныеНачисления.Сотрудник;
		Движение.Бригада = ТекСтрокаОсновныеНачисления.Сотрудник.Бригада;
		Движение.Параметр1 = ТекСтрокаОсновныеНачисления.Размер;
	КонецЦикла;

	Для Каждого ТекСтрокаДополнительныеНачисления Из ДополнительныеНачисления Цикл
		Движение = Движения.ДополнительныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаДополнительныеНачисления.ВидРасчета;
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.БазовыйПериодНачало = НачалоМесяца(ПериодРегистрации);
		Движение.БазовыйПериодКонец = КонецМесяца(ПериодРегистрации);
		Движение.Сотрудник = ТекСтрокаДополнительныеНачисления.Сотрудник;
		Движение.Бригада = ТекСтрокаДополнительныеНачисления.Сотрудник.Бригада;
		Движение.Параметр1 = ТекСтрокаДополнительныеНачисления.Размер;
	КонецЦикла;

	Движения.Записать();
	
	РассчитатьОклад();
	РассчитатьНадбавку();
	РассчитатьПремиюРуководителю();
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
КонецПроцедуры

Процедура РассчитатьОклад()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК ЧасыФакт
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(Регистратор = &Регистратор) КАК ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для каждого Движение Из Движения.ОсновныеНачисления Цикл
	
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.Оклад Тогда
		
			 Продолжить;
		
		КонецЕсли;	
		
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки") Тогда
			
			Движение.Параметр2 = Выборка.ЧасыФакт;
			
			Движение.Результат = Выборка.ЧасыФакт * Движение.Параметр1;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ОсновныеНачисления.Записать();

КонецПроцедуры

Процедура РассчитатьНадбавку()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Бригада КАК Бригада,
		|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_ДанныеДок
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисления КАК ДополнительныеНачисления
		|ГДЕ
		|	ДополнительныеНачисления.Регистратор = &Регистратор
		|	И ДополнительныеНачисления.ВидРасчета = &ВидРасчетаНадбавка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Бригада
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеДок.Бригада КАК Бригада,
		|	ВТ_ДанныеДок.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ПродажиОбороты.СуммаОборот, 0) КАК СуммаПродаж
		|ИЗ
		|	ВТ_ДанныеДок КАК ВТ_ДанныеДок
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(
		|				&НачалоПериода,
		|				&ОкончаниеПериода,
		|				,
		|				Бригада В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТ_ДанныеДок.Бригада КАК Бригада
		|					ИЗ
		|						ВТ_ДанныеДок КАК ВТ_ДанныеДок)) КАК ПродажиОбороты
		|		ПО ВТ_ДанныеДок.Бригада = ПродажиОбороты.Бригада";
	
	Запрос.УстановитьПараметр("ВидРасчетаНадбавка", ПланыВидовРасчета.ДополнительныеНачисления.Надбавка);
	
	ОкончаниеПериода = НачалоКвартала(ПериодРегистрации) - 1;
	НачалоПериода = НачалоКвартала(ОкончаниеПериода);

	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для каждого Движение Из Движения.ДополнительныеНачисления Цикл
	
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ДополнительныеНачисления.Надбавка Тогда
		
			 Продолжить;
		
		КонецЕсли;	
		
		Выборка.Сбросить();
		
		Если Выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки") Тогда
			
			Движение.Параметр2 = Выборка.СуммаПродаж;
			
			Движение.Результат = Выборка.СуммаПродаж * Движение.Параметр1 / 100;
			
		КонецЕсли;
		
	КонецЦикла;
	
	
	Движения.ДополнительныеНачисления.Записать();

КонецПроцедуры

Процедура РассчитатьПремиюРуководителю()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДополнительныеНачисленияБазаДополнительныеНачисления.СотрудникРазрез КАК СотрудникРазрез,
		|	ДополнительныеНачисленияБазаДополнительныеНачисления.РезультатБаза КАК РезультатБаза,
		|	ДополнительныеНачисленияБазаДополнительныеНачисления.Бригада КАК Бригада
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисления.БазаДополнительныеНачисления(&ИзмерениеБригада, &ИзмерениеБригада, &РазрезСотрудник, Регистратор = &Регистратор) КАК ДополнительныеНачисленияБазаДополнительныеНачисления
		|ИТОГИ ПО
		|	Бригада";
	
	ИзмерениеБригада = Новый Массив;
	ИзмерениеБригада.Добавить("Бригада");
	Запрос.УстановитьПараметр("ИзмерениеБригада", ИзмерениеБригада);
	
	РазрезСотрудник = Новый Массив;
	РазрезСотрудник.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("РазрезСотрудник", РазрезСотрудник);
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаБригада = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для каждого Движение Из Движения.ДополнительныеНачисления Цикл
	
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ДополнительныеНачисления.ПремияРуководителю Тогда
		
			 Продолжить;
		
		КонецЕсли;	
		
		ВыборкаБригада.Сбросить();
		Если ВыборкаБригада.НайтиСледующий(Движение.Бригада, "Бригада") Тогда
			
			Выборка = ВыборкаБригада.Выбрать();
			МаксНадбавка = 0;
			Пока Выборка.Следующий() Цикл
			
				МаксНадбавка = МАКС(МаксНадбавка, Выборка.РезультатБаза);	
			
			КонецЦикла;
			
			Движение.Параметр2 = МаксНадбавка;
			
			Движение.Результат = МаксНадбавка * Движение.Параметр1 / 100;
			
		КонецЕсли;
		
	КонецЦикла;
	
	
	Движения.ДополнительныеНачисления.Записать();

КонецПроцедуры
