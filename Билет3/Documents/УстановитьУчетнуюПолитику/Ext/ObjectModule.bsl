
Процедура ОбработкаПроведения(Отказ, Режим)
	
	ДатаПрошлойПолитики = НачалоМесяца(Дата) - 1;
	УчетнаяПолитика = РегистрыСведений.УчетнаяПолитика.ПолучитьПоследнее(ДатаПрошлойПолитики);
	
	Если ЗначениеЗаполнено(УчетнаяПолитика.МетодСписания) Тогда
		
		СтарыйМетод = УчетнаяПолитика.МетодСписания;
		Если СтарыйМетод <> МетодСписания Тогда
			ОбновитьПартии();
		КонецЕсли;
		
	КонецЕсли;
		
	// регистр УчетнаяПолитика
	Движения.УчетнаяПолитика.Записывать = Истина;
	Движение = Движения.УчетнаяПолитика.Добавить();
	Движение.Период = Дата;
	Движение.МетодСписания = МетодСписания;

	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
КонецПроцедуры

Процедура ОбновитьПартии()
		
	Движения.ОстаткиНоменклатуры.Записать();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
	Блокировка.Заблокировать();	
	
	НачалоПериода = НачалоМесяца(Дата);
	Если МетодСписания = Перечисления.УчетнаяПолитика.ФИФО Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
		|	ОстаткиНоменклатурыОстатки.Партия КАК Партия,
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК Количество,
		|	ОстаткиНоменклатурыОстатки.СуммаОстаток КАК Сумма
		|ИЗ
		|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(&НачалоПериода, ) КАК ОстаткиНоменклатурыОстатки
		|ГДЕ
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток <> 0
		|	И ОстаткиНоменклатурыОстатки.Партия = &Ссылка";
		
		Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
		Запрос.УстановитьПараметр("Ссылка", Документы.ПриходнаяНакладная.ПустаяСсылка());
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Движение = Движения.ОстаткиНоменклатуры.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальныеЗаписи);
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = НачалоПериода-1;
			
			Движение = Движения.ОстаткиНоменклатуры.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальныеЗаписи);
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = НачалоПериода;
			Движение.Партия = Ссылка;
			
		КонецЦикла;
		
	Иначе
		
		Движения.ОстаткиНоменклатуры.Записывать = Истина;
		Движения.ОстаткиНоменклатуры.Записать();
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
		|	ОстаткиНоменклатурыОстатки.Партия КАК Партия,
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК Количество,
		|	ОстаткиНоменклатурыОстатки.СуммаОстаток КАК Сумма
		|ИЗ
		|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(&НачалоПериода, ) КАК ОстаткиНоменклатурыОстатки
		|ГДЕ
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток <> 0
		|	И ОстаткиНоменклатурыОстатки.Партия <> &Ссылка
		|ИТОГИ
		|	СУММА(Количество),
		|	СУММА(Сумма)
		|ПО
		|	Номенклатура";
		
		Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
		Запрос.УстановитьПараметр("Ссылка", Документы.ПриходнаяНакладная.ПустаяСсылка());
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаНоменклатура.Следующий() Цикл
			
			ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
			
			Движение = Движения.ОстаткиНоменклатуры.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, ВыборкаНоменклатура);
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = НачалоПериода;
			Движение.Партия = Документы.ПриходнаяНакладная.ПустаяСсылка();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				Движение = Движения.ОстаткиНоменклатуры.Добавить();
				ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальныеЗаписи);
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Период = НачалоПериода-1;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Движения.ОстаткиНоменклатуры.Записать();
	
КонецПроцедуры

