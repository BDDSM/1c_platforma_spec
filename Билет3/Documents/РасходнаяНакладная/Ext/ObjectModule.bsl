Процедура ОбработкаПроведения(Отказ, Режим)
	
	УчетнаяПолитика = РегистрыСведений.УчетнаяПолитика.ПолучитьПоследнее(МоментВремени());
	
	Если УчетнаяПолитика.Количество() = 0 Тогда
		МетодСписания = Неопределено;
	Иначе
		МетодСписания = УчетнаяПолитика.МетодСписания;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(МетодСписания) Тогда
		
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не установлена учётная политика!";
		Сообщение.Сообщить();
		Возврат;
		
	КонецЕсли;
	
	Движения.ОстаткиНоменклатуры.Записывать = Истина;
	Движения.ОстаткиНоменклатуры.Записать();
	
	Движения.Управленческий.Записывать = Истина;
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
	ЭлементБлокировки.ИсточникДанных = СписокНоменклатуры;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	Блокировка.Заблокировать();	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Количество) КАК Количество,
		|	МИНИМУМ(РасходнаяНакладнаяСписокНоменклатуры.НомерСтроки) КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_ДанныеДок
		|ИЗ
		|	Документ.РасходнаяНакладная.СписокНоменклатуры КАК РасходнаяНакладнаяСписокНоменклатуры
		|ГДЕ
		|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
		|	И РасходнаяНакладнаяСписокНоменклатуры.Номенклатура.ВидНоменклатуры = &ВидНоменклатуры
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеДок.Номенклатура КАК Номенклатура,
		|	ВТ_ДанныеДок.Количество КАК Количество,
		|	ВТ_ДанныеДок.НомерСтроки КАК НомерСтроки,
		|	ОстаткиНоменклатурыОстатки.Партия КАК Партия,
		|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) КАК КоличествоПартии,
		|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.СуммаОстаток, 0) КАК СуммаПартии
		|ИЗ
		|	ВТ_ДанныеДок КАК ВТ_ДанныеДок
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|				&МоментВремени,
		|				Номенклатура В
		|					(ВЫБРАТЬ
		|						ВТ_ДанныеДок.Номенклатура КАК Номенклатура
		|					ИЗ
		|						ВТ_ДанныеДок КАК ВТ_ДанныеДок)) КАК ОстаткиНоменклатурыОстатки
		|		ПО ВТ_ДанныеДок.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОстаткиНоменклатурыОстатки.Партия.МоментВремени
		|ИТОГИ
		|	МАКСИМУМ(Количество),
		|	МАКСИМУМ(НомерСтроки),
		|	СУММА(КоличествоПартии),
		|	СУММА(СуммаПартии)
		|ПО
		|	Номенклатура";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры", Перечисления.ВидыНоменклатуры.Товар);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		НеХватает = ВыборкаНоменклатура.Количество - ВыборкаНоменклатура.КоличествоПартии; 
		Если НеХватает > 0 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не хватает остатка в количестве: " + НеХватает;
			Сообщение.Поле = СтрШаблон("СписокНоменклатуры[%1].Количество", Формат(ВыборкаНоменклатура.НомерСтроки - 1, "ЧГ="));
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
		КонецЕсли;
		
		Выборка = ВыборкаНоменклатура.Выбрать();
		
		КоличествоСписать = ВыборкаНоменклатура.Количество; 
		
		Если МетодСписания = Перечисления.УчетнаяПолитика.ФИФО Тогда
			
			СуммаСписано = 0;
			Пока КоличествоСписать > 0 И Выборка.Следующий() Цикл
				
				СписатьПоПартии = МИН(КоличествоСписать, Выборка.КоличествоПартии);
				СебестоимостьСписать = ?(СписатьПоПартии = Выборка.КоличествоПартии, 
					Выборка.СуммаПартии, 
					КоличествоСписать * Выборка.СуммаПартии / Выборка.КоличествоПартии);
				КоличествоСписать = КоличествоСписать - СписатьПоПартии;
				
				Движение = Движения.ОстаткиНоменклатуры.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Период = Дата;
				Движение.Номенклатура = Выборка.Номенклатура;
				Движение.Партия = Выборка.Партия;
				Движение.Количество = СписатьПоПартии;
				Движение.Сумма = СебестоимостьСписать;
				
				СуммаСписано = СуммаСписано + Движение.Сумма;
				
			КонецЦикла;
			
		Иначе
				
			СписатьПоПартии = МИН(КоличествоСписать, ВыборкаНоменклатура.КоличествоПартии);
			СебестоимостьСписать = ?(СписатьПоПартии = ВыборкаНоменклатура.КоличествоПартии, 
				ВыборкаНоменклатура.СуммаПартии, 
				КоличествоСписать * ВыборкаНоменклатура.СуммаПартии / ВыборкаНоменклатура.КоличествоПартии);
			КоличествоСписать = КоличествоСписать - СписатьПоПартии;
			
			Движение = Движения.ОстаткиНоменклатуры.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
			Движение.Количество = СписатьПоПартии;
			Движение.Сумма = СебестоимостьСписать;
			
		КонецЕсли;
		
		Если КоличествоСписать > 0 Тогда
			Движение = Движения.ОстаткиНоменклатуры.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
			Движение.Количество = КоличествоСписать;
			Движение.Сумма = 0;
		КонецЕсли;
		
	КонецЦикла;
	
	// регистр Управленческий 
	Движение = Движения.Управленческий.Добавить();
	Движение.СчетДт = ПланыСчетов.Управленческий.Покупатели;
	Движение.СчетКт = ПланыСчетов.Управленческий.ПрибылиУбытки;
	Движение.Период = Дата;
	Движение.Сумма = СуммаПоДокументу * Курс;
	Движение.СуммаВалДт = СуммаПоДокументу;
	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагент] = Контрагент;
	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Договор] = Договор;
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!


	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//Если Курс = 0 Тогда
	Отбор = Новый Структура("Валюта", Договор.Валюта);
	ДанныеРегистра = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Дата, Отбор);
		Если НЕ ЗначениеЗаполнено(ДанныеРегистра.Курс) Тогда
			Курс = 1;
		Иначе
			Курс = ДанныеРегистра.Курс;
		КонецЕсли;
	//КонецЕсли;
	СуммаПоДокументу = СписокНоменклатуры.Итог("Сумма");
	
КонецПроцедуры
