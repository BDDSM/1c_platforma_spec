
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.Управленческий.Записывать = Истина;
	Движения.Управленческий.Записать();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрБухгалтерии.Управленческий");
	ЭлементБлокировки.УстановитьЗначение("Счет", ПланыСчетов.Управленческий.Покупатели);
	ЭлементБлокировки.УстановитьЗначение(ПланыВидовХарактеристик.ВидыСубконто.Контрагент, Контрагент);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УправленческийОстатки.Счет КАК Счет,
	|	УправленческийОстатки.Субконто1 КАК Контрагент,
	|	УправленческийОстатки.Субконто2 КАК Договор,
	|	УправленческийОстатки.СуммаВалОстаток КАК СуммаВал,
	|	УправленческийОстатки.СуммаОстаток КАК Сумма,
	|	ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 1) КАК Курс
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.Остатки(&МоментВремени, Счет = &Покупатели, &МасСубконто, Субконто1 = &Контрагент) КАК УправленческийОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						Договора.Валюта КАК Валюта
	|					ИЗ
	|						Справочник.Договора КАК Договора
	|					ГДЕ
	|						Договора.Владелец = &Контрагент)) КАК КурсыВалютСрезПоследних
	|		ПО УправленческийОстатки.Субконто2.Валюта = КурсыВалютСрезПоследних.Валюта
	|
	|УПОРЯДОЧИТЬ ПО
	|	УправленческийОстатки.СуммаОстаток УБЫВ
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	МасСубконто = Новый Массив;
	МасСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Контрагент);
	МасСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Договор);
	Запрос.УстановитьПараметр("МасСубконто", МасСубконто);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Покупатели", ПланыСчетов.Управленческий.Покупатели);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаОбщийИтог = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаОбщийИтог.Следующий();
	
	Если ВыборкаОбщийИтог.Сумма = Неопределено ИЛИ Сумма > ВыборкаОбщийИтог.Сумма Тогда
		
		Отказ = Истина;
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Сумма по документу превышает сумму долгов ко контрагенту!";
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = ВыборкаОбщийИтог.Выбрать();
	
	СуммаСписать = Сумма;
	Пока СуммаСписать > 0 И ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СписатьПоДоговору = МИН(СуммаСписать, ВыборкаДетальныеЗаписи.Сумма);
		СуммаСписать = СуммаСписать - СписатьПоДоговору;
		
		Если ВыборкаДетальныеЗаписи.Курс = 0 Тогда
			Курс = 1;
		ИНаче
			Курс = ВыборкаДетальныеЗаписи.Курс;
		КонецЕсли;
		
		СуммаВалСписать = ?(СписатьПоДоговору = ВыборкаДетальныеЗаписи.Сумма, 
			ВыборкаДетальныеЗаписи.СуммаВал, 
			СписатьПоДоговору / Курс); 
		
		
		Движение = Движения.Управленческий.Добавить();
		Движение.СчетДт = ПланыСчетов.Управленческий.Касса;
		Движение.СчетКт = ПланыСчетов.Управленческий.Покупатели;
		Движение.Период = Дата;
		Движение.Сумма = СписатьПоДоговору;
		Движение.СуммаВалКт = СуммаВалСписать;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Контрагент] = ВыборкаДетальныеЗаписи.Контрагент;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Договор] = ВыборкаДетальныеЗаписи.Договор;
		
	КонецЦикла;
	
		
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
КонецПроцедуры
