
&НаСервереБезКонтекста
Процедура ВыполнитьКорректировкуНаСервере(ДатаКоррект)

	НачатьТранзакцию();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрБухгалтерии.Управленческий");
	ЭлементБлокировки.УстановитьЗначение("Счет", ПланыСчетов.Управленческий.Покупатели);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УправленческийОстатки.Счет КАК Счет,
	|	УправленческийОстатки.Субконто1 КАК Контрагент,
	|	УправленческийОстатки.Субконто2 КАК Договор,
	|	УправленческийОстатки.СуммаВалОстаток КАК СуммаВал,
	|	УправленческийОстатки.СуммаОстаток КАК Сумма,
	|	ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) КАК Курс,
	|	УправленческийОстатки.СуммаОстаток - ВЫБОР
	|		КОГДА ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) = 0
	|			ТОГДА УправленческийОстатки.СуммаВалОстаток
	|		ИНАЧЕ УправленческийОстатки.СуммаВалОстаток * КурсыВалютСрезПоследних.Курс
	|	КОНЕЦ КАК СуммаРазницы
	|ИЗ
	|	РегистрБухгалтерии.Управленческий.Остатки(&МоментВремени, Счет = &Покупатели, &МасСубконто, ) КАК УправленческийОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&МоментВремени, ) КАК КурсыВалютСрезПоследних
	|		ПО УправленческийОстатки.Субконто2.Валюта = КурсыВалютСрезПоследних.Валюта
	|ГДЕ
	|	УправленческийОстатки.СуммаОстаток - ВЫБОР
	|			КОГДА ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) = 0
	|				ТОГДА УправленческийОстатки.СуммаВалОстаток
	|			ИНАЧЕ УправленческийОстатки.СуммаВалОстаток / КурсыВалютСрезПоследних.Курс
	|		КОНЕЦ <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	УправленческийОстатки.СуммаОстаток УБЫВ";
	
	МасСубконто = Новый Массив;
	МасСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Контрагент);
	МасСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Договор);
	Запрос.УстановитьПараметр("МасСубконто", МасСубконто);
	Запрос.УстановитьПараметр("МоментВремени", ДатаКоррект);
	Запрос.УстановитьПараметр("Покупатели", ПланыСчетов.Управленческий.Покупатели);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "В регистре не нашлось записей, которые требовалось бы исправлять!";
		Сообщение.Сообщить();
		
		Если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ОперацияДок = Документы.Операция.СоздатьДокумент();
	ОперацияДок.Дата = ДатаКоррект;
	Операциядок.Записать();
	
	Движения = ОперацияДок.Движения;
	Движения.Управленческий.Записывать = Истина;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.СуммаРазницы > 0 Тогда
			
			Движение = Движения.Управленческий.Добавить();
			Движение.СчетДт = ПланыСчетов.Управленческий.Покупатели;
			Движение.СчетКт = ПланыСчетов.Управленческий.ПрибылиУбытки;
			Движение.Период = ДатаКоррект;
			Движение.Сумма = ВыборкаДетальныеЗаписи.СуммаРазницы;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагент] = ВыборкаДетальныеЗаписи.Контрагент;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Договор] = ВыборкаДетальныеЗаписи.Договор;
			
		Иначе
			
			Движение = Движения.Управленческий.Добавить();
			Движение.СчетДт = ПланыСчетов.Управленческий.ПрибылиУбытки;
			Движение.СчетКт = ПланыСчетов.Управленческий.Покупатели;
			Движение.Период = ДатаКоррект;
			Движение.Сумма = -ВыборкаДетальныеЗаписи.СуммаРазницы;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Контрагент] = ВыборкаДетальныеЗаписи.Контрагент;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Договор] = ВыборкаДетальныеЗаписи.Договор;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Попытка
		
		Операциядок.Записать();
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		Если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Сообщение.Сообщить();
		
	КонецПопытки;		
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКорректировку(Команда)
	Если ПроверитьЗаполнение() Тогда
		ВыполнитьКорректировкуНаСервере(Дата);
	КонецЕсли;
КонецПроцедуры
