
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ОсновныеНачисления.Записывать = Истина;
	Движения.ОсновныеНачисления.Записать();
	
	Для Каждого ТекСтрокаОсновныеНачисления Из ОсновныеНачисления Цикл
		
		Если ТекСтрокаОсновныеНачисления.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Оклад Тогда
			Продолжить;
		КонецЕсли;
		
		Движение = Движения.ОсновныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаОсновныеНачисления.ВидРасчета;
		Если ТекСтрокаОсновныеНачисления.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.ПремияФикс 
			И ТекСтрокаОсновныеНачисления.ДатаНачала <> ТекСтрокаОсновныеНачисления.ДатаОкончания Тогда 
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "У фиксированной премии дата начала должна совпадать с датой конца!";
			Сообщение.Сообщить();
		КонецЕсли;
		
		Движение.ПериодДействияНачало = ТекСтрокаОсновныеНачисления.ДатаНачала;
		Движение.ПериодДействияКонец = КонецДня(ТекСтрокаОсновныеНачисления.ДатаОкончания);
		Движение.ПериодРегистрации = ПериодРегистрации;
		Если ТекСтрокаОсновныеНачисления.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Премия Тогда 
			Движение.БазовыйПериодНачало = ТекСтрокаОсновныеНачисления.ДатаНачала;
			Движение.БазовыйПериодКонец = КонецДня(ТекСтрокаОсновныеНачисления.ДатаОкончания);
		КонецЕсли;
		Движение.Сотрудник = ТекСтрокаОсновныеНачисления.Сотрудник;
		Если ТекСтрокаОсновныеНачисления.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.ПремияФикс Тогда
			Движение.Результат = ТекСтрокаОсновныеНачисления.Размер;
		Иначе
			Движение.Результат = 0;
		КонецЕсли;
		
		Движение.Подразделение = ТекСтрокаОсновныеНачисления.Подразделение;
		Движение.Параметр = ТекСтрокаОсновныеНачисления.Размер;
		
	КонецЦикла;
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачислениеЗарплатыОсновныеНачисления.Сотрудник КАК Сотрудник,
	|	НачислениеЗарплатыОсновныеНачисления.Подразделение КАК Подразделение,
	|	НачислениеЗарплатыОсновныеНачисления.ДатаНачала КАК ДатаНачала,
	|	НачислениеЗарплатыОсновныеНачисления.ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ДанныеДок
	|ИЗ
	|	Документ.НачислениеЗарплаты.ОсновныеНачисления КАК НачислениеЗарплатыОсновныеНачисления
	|ГДЕ
	|	НачислениеЗарплатыОсновныеНачисления.ВидРасчета = &ВидРасчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СведенияОСотрудниках.Период, ВТ_ДанныеДок.ДатаНачала)) КАК Период,
	|	ВТ_ДанныеДок.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТ_ОкладНаНачалоРасчета
	|ИЗ
	|	ВТ_ДанныеДок КАК ВТ_ДанныеДок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСотрудниках КАК СведенияОСотрудниках
	|		ПО ВТ_ДанныеДок.Сотрудник = СведенияОСотрудниках.Сотрудник
	|ГДЕ
	|	СведенияОСотрудниках.Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТ_ДанныеДок.Сотрудник КАК Сотрудник
	|			ИЗ
	|				ВТ_ДанныеДок КАК ВТ_ДанныеДок)
	|	И СведенияОСотрудниках.Период <= &НачалоПериодаРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДанныеДок.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОСотрудниках.Сотрудник КАК Сотрудник,
	|	СведенияОСотрудниках.Период КАК Период
	|ПОМЕСТИТЬ ВТ_ИзменениеОкладаВПериоде
	|ИЗ
	|	РегистрСведений.СведенияОСотрудниках КАК СведенияОСотрудниках
	|ГДЕ
	|	СведенияОСотрудниках.Период > &НачалоПериодаРасчета
	|	И СведенияОСотрудниках.Период <= &КонецПериодаРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДок.Сотрудник КАК Сотрудник,
	|	ВТ_ДанныеДок.Подразделение КАК Подразделение,
	|	ВТ_ДанныеДок.ДатаНачала КАК ДатаНачала,
	|	ВТ_ДанныеДок.ДатаОкончания КАК ДатаОкончания,
	|	ВТ_ОкладНаНачалоРасчета.Период КАК ДатаОклада
	|ПОМЕСТИТЬ ВТ_НачалоРасчета
	|ИЗ
	|	ВТ_ОкладНаНачалоРасчета КАК ВТ_ОкладНаНачалоРасчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДанныеДок КАК ВТ_ДанныеДок
	|		ПО ВТ_ОкладНаНачалоРасчета.Сотрудник = ВТ_ДанныеДок.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НачалоРасчета.Сотрудник КАК Сотрудник,
	|	ВТ_НачалоРасчета.Подразделение КАК Подразделение,
	|	ВТ_НачалоРасчета.ДатаНачала КАК ДатаНачала,
	|	ВТ_НачалоРасчета.ДатаОкончания КАК ДатаОкончания,
	|	ЕСТЬNULL(СведенияОСотрудниках.Оклад, 0) КАК Оклад
	|ИЗ
	|	ВТ_НачалоРасчета КАК ВТ_НачалоРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСотрудниках КАК СведенияОСотрудниках
	|		ПО ВТ_НачалоРасчета.Сотрудник = СведенияОСотрудниках.Сотрудник
	|			И ВТ_НачалоРасчета.ДатаОклада = СведенияОСотрудниках.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ДанныеДок.Сотрудник,
	|	ВТ_ДанныеДок.Подразделение,
	|	ВТ_ИзменениеОкладаВПериоде.Период,
	|	ВТ_ДанныеДок.ДатаОкончания,
	|	СведенияОСотрудниках.Оклад
	|ИЗ
	|	ВТ_ДанныеДок КАК ВТ_ДанныеДок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИзменениеОкладаВПериоде КАК ВТ_ИзменениеОкладаВПериоде
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСотрудниках КАК СведенияОСотрудниках
	|			ПО ВТ_ИзменениеОкладаВПериоде.Период = СведенияОСотрудниках.Период
	|		ПО ВТ_ДанныеДок.Сотрудник = ВТ_ИзменениеОкладаВПериоде.Сотрудник";
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ОсновныеНачисления.Оклад);
	
	Запрос.УстановитьПараметр("НачалоПериодаРасчета", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериодаРасчета", КонецМесяца(ПериодРегистрации));
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ПрошлаяЗапись = Неопределено;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.ОсновныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Оклад;
		Движение.ПериодДействияНачало = ВыборкаДетальныеЗаписи.ДатаНачала;
		Движение.ПериодДействияКонец = КонецДня(ВыборкаДетальныеЗаписи.ДатаОкончания);
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		Движение.Подразделение = ВыборкаДетальныеЗаписи.Подразделение;
		Движение.Параметр = ВыборкаДетальныеЗаписи.Оклад;
		
		Если ПрошлаяЗапись <> Неопределено Тогда
			ПрошлаяЗапись.ПериодДействияКонец = Движение.ПериодДействияНачало - 1;	
		КонецЕсли;
		
		ПрошлаяЗапись = Движение;
		
	КонецЦикла;
	
	Движения.Записать();
	
	РасчитатьОклад();
	РасчитатьПремию();
	
	ЗаписатьРегистрЗарплатаКВыплате();
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура РасчитатьОклад()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК ЧасыПлан,
		|	ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК ЧасыФакт
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(Регистратор = &Регистратор) КАК ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для каждого Движение Из Движения.ОсновныеНачисления Цикл
	
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.Оклад Тогда
			Продолжить;
		КонецЕсли;
		
		Если Выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки") Тогда
			
			Движение.Параметр1 = Выборка.ЧасыПлан;
			Движение.Параметр2 = Выборка.ЧасыФакт;
			Если ЗначениеЗаполнено(Выборка.ЧасыПлан) Тогда
				
				Движение.Результат = Выборка.ЧасыФакт * Движение.Параметр / Выборка.ЧасыПлан;
				
			КонецЕсли;
			
		КонецЕсли;
		
	
	КонецЦикла;
	
	ДВижения.ОсновныеНачисления.Записать();
	
КонецПроцедуры

Процедура РасчитатьПремию()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ОсновныеНачисленияБазаОсновныеНачисления.РезультатБаза, 0) КАК РезультатБаза,
	|	ОсновныеНачисленияДанныеГрафика.ЗначениеДниФактическийПериодДействия КАК ДниФакт
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(Регистратор = &Регистратор И ВидРасчета = &ВидРасчета) КАК ОсновныеНачисленияДанныеГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисления.БазаОсновныеНачисления(&Измерения, &Измерения, , Регистратор = &Регистратор) КАК ОсновныеНачисленияБазаОсновныеНачисления
	|		ПО ОсновныеНачисленияДанныеГрафика.НомерСтроки = ОсновныеНачисленияБазаОсновныеНачисления.НомерСтроки";
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ОсновныеНачисления.Премия);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для каждого Движение Из Движения.ОсновныеНачисления Цикл
	
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.Премия Тогда
			Продолжить;
		КонецЕсли;
		
		Если Выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки") Тогда
			
			Движение.Параметр1 = Выборка.РезультатБаза;
			Движение.Результат = Выборка.ДниФакт * Выборка.РезультатБаза * Движение.Параметр/100;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ДВижения.ОсновныеНачисления.Записать();
	
КонецПроцедуры

Процедура ЗаписатьРегистрЗарплатаКВыплате()
	
	Для Каждого Движение ИЗ Движения.ОсновныеНачисления Цикл
		
		ДвижКВыплате = Движения.ЗапрлатаКВыплате.Добавить();
		ДвижКВыплате.ВидДвижения = ВидДвиженияНакопления.Приход;
		ДвижКВыплате.Период = ПериодРегистрации;
		ДвижКВыплате.Сотрудник = Движение.Сотрудник;
		ДвижКВыплате.Подразделение = Движение.Подразделение;
		ДвижКВыплате.ВидРасчета = Движение.ВидРасчета;
		ДвижКВыплате.Размер = Движение.Результат;
	КонецЦикла;
	
	Движения.ЗапрлатаКВыплате.Записать();

КонецПроцедуры


