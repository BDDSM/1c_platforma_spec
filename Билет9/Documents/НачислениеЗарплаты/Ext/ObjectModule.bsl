
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// регистр ОсновныеНачисления
	Движения.ОсновныеНачисления.Записывать = Истина;
	Для Каждого ТекСтрока Из ОсновныеНачисления Цикл
		
		Если ТекСтрока.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Оклад
			И Месяц(ТекСтрока.ДатаНачала) <> Месяц(ТекСтрока.ДатаОкончания) Тогда
			
			Отказ = Истина;
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "В строке %1 для оклада установлен неверный период";
			Сообщение.Сообщить();
		КонецЕсли;
		
		Если Отказ Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТекСтрока.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Больничный Тогда
			
			ДатаКонцаБольничного = ТекСтрока.ДатаОкончания;
			
			ДатаНачалаПроводки = ТекСтрока.ДатаНачала;
			ДатаКонцаПроводки = МИН(КонецМесяца(ТекСтрока.ДатаНачала), ДатаКонцаБольничного);
			
			Пока ДатаКонцаПроводки <= ДатаКонцаБольничного Цикл
				
				
				Движение = Движения.ОсновныеНачисления.Добавить();
				Движение.Сторно = Ложь;
				Движение.ВидРасчета = ТекСтрока.ВидРасчета;
				Движение.ПериодДействияНачало = ДатаНачалаПроводки;
				Движение.ПериодДействияКонец = ДатаКонцаПроводки;
				Движение.ПериодРегистрации = ПериодРегистрации;
				Движение.БазовыйПериодКонец = НачалоМесяца(ДатаНачалаПроводки)-1;
				Движение.БазовыйПериодНачало = НачалоМесяца(Движение.БазовыйПериодКонец); 
				Движение.Сотрудник = ТекСтрока.Сотрудник;
				Движение.Подразделение = ТекСтрока.Подразделение;
				Движение.ГрафикРаботы = ТекСтрока.ГрафикРаботы;
				
				ДатаНачалаПроводки = КонецМесяца(ДатаНачалаПроводки) + 1;
				Если ДатаКонцаПроводки = ДатаКонцаБольничного Тогда
					Прервать;
				Иначе
					ДатаКонцаПроводки = МИН(КонецМесяца(ДатаНачалаПроводки), ДатаКонцаБольничного);
				КонецЕсли;
				
				
			КонецЦикла;
			
		Иначе
			
			Движение = Движения.ОсновныеНачисления.Добавить();
			Движение.Сторно = Ложь;
			Движение.ВидРасчета = ТекСтрока.ВидРасчета;
			Движение.ПериодДействияНачало = ТекСтрока.ДатаНачала;
			Движение.ПериодДействияКонец = ТекСтрока.ДатаОкончания;
			Движение.ПериодРегистрации = ПериодРегистрации;
			Движение.Сотрудник = ТекСтрока.Сотрудник;
			Движение.Подразделение = ТекСтрока.Подразделение;
			Движение.ГрафикРаботы = ТекСтрока.ГрафикРаботы;
		
		КонецЕсли;
		
		
	КонецЦикла;

	Движения.Записать();
	
	
	РассчитатьБольничный();
	РассчитатьОклад();
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	ПериодРегистрации = НачалоМесяца(ПериодРегистрации);
КонецПроцедуры

Процедура РассчитатьБольничный() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеДниФактическийПериодДействия, 0) КАК ДниФакт,
	|	ЕСТЬNULL(ОсновныеНачисленияБазаОсновныеНачисления.РезультатБаза, 0) КАК РезультатБаза,
	|	ЕСТЬNULL(ОсновныеНачисленияБазаОсновныеНачисления.ДниРаботыБаза, 0) КАК ДниРаботыБаза
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(Регистратор = &Регистратор) КАК ОсновныеНачисленияДанныеГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисления.БазаОсновныеНачисления(&Измерения, &Измерения, , Регистратор = &Регистратор) КАК ОсновныеНачисленияБазаОсновныеНачисления
	|		ПО ОсновныеНачисленияДанныеГрафика.НомерСтроки = ОсновныеНачисленияБазаОсновныеНачисления.НомерСтроки";
	Измерения = Новый массив;
	Измерения.Добавить("Сотрудник");
	Измерения.Добавить("Подразделение");
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	

	Для Каждого Движение ИЗ Движения.ОсновныеНачисления Цикл
		
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.Больничный Тогда
			
			Продолжить;	
			
		КонецЕсли;	
		
		
		Выборка.Сбросить();
		Если выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки") Тогда
		
			Движение.Параметр1 = выборка.ДниФакт;
			Движение.Параметр2 = выборка.РезультатБаза;
			Движение.Параметр3 = выборка.ДниРаботыБаза;
			
			Если Выборка.ДниРаботыБаза <> 0 Тогда
				
				ДВижение.Результат = выборка.РезультатБаза / Выборка.ДниРаботыБаза * выборка.ДниФакт;
			
			КонецЕсли;
			
		КонецЕсли;
		
		
	КонецЦикла;
	
	
	ДВижения.ОсновныеНачисления.Записать();
	
КонецПроцедуры

Процедура РассчитатьОклад() 
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК ЗначениеФактическийПериодДействия,
		|	ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисленияДанныеГрафика.Подразделение КАК Подразделение,
		|	ОсновныеНачисленияДанныеГрафика.ЗначениеДниФактическийПериодДействия КАК ЗначениеДниФактическийПериодДействия
		|ПОМЕСТИТЬ ВТ_ДанныеГрафика
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка) КАК ОсновныеНачисленияДанныеГрафика
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВТ_ДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК ЧасыФакт,
		|	ЕСТЬNULL(ВТ_ДанныеГрафика.ЗначениеДниФактическийПериодДействия, 0) КАК ДниФакт,
		|	ЕСТЬNULL(СведенияОСотрудникахСрезПоследних.Оклад, 0) КАК ЧасоваяСтавка
		|ИЗ
		|	ВТ_ДанныеГрафика КАК ВТ_ДанныеГрафика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСотрудниках.СрезПоследних(
		|				&ПериодРегистрации,
		|				(Сотрудник, Подразделение) В
		|					(ВЫБРАТЬ
		|						ВТ_ДанныеГрафика.Сотрудник КАК Сотрудник,
		|						ВТ_ДанныеГрафика.Подразделение КАК Подразделение
		|					ИЗ
		|						ВТ_ДанныеГрафика КАК ВТ_ДанныеГрафика)) КАК СведенияОСотрудникахСрезПоследних
		|		ПО ВТ_ДанныеГрафика.Сотрудник = СведенияОСотрудникахСрезПоследних.Сотрудник
		|			И ВТ_ДанныеГрафика.Подразделение = СведенияОСотрудникахСрезПоследних.Подразделение";
	
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	

	Для Каждого Движение ИЗ Движения.ОсновныеНачисления Цикл
		
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.Оклад Тогда
			
			Продолжить;	
			
		КонецЕсли;	
		
		
		Выборка.Сбросить();
		Если выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки") Тогда
		
			Движение.Параметр1 = выборка.ЧасоваяСтавка;
			Движение.Параметр2 = выборка.ЧасыФакт;
			
			Движение.ДниРаботы = выборка.ДниФакт;
			ДВижение.Результат = выборка.ЧасоваяСтавка * выборка.ЧасыФакт;
			
		КонецЕсли;
		
		
	КонецЦикла;
	
	
	ДВижения.ОсновныеНачисления.Записать();


	
	
КонецПроцедуры
	

