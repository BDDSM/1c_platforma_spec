
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ОсновныеНачисления.Записывать = Истина;
	
	Для Каждого ТекСтрокаОсновныеНачисления Из ОсновныеНачисления Цикл
		Движение = Движения.ОсновныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаОсновныеНачисления.ВидРасчета;
		
		Если Движение.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.КомпенсацияЗаОбеды Тогда
			
			Движение.ПериодДействияНачало = НачалоМесяца(ТекСтрокаОсновныеНачисления.ДатаНачала);
			Движение.ПериодДействияКонец = КонецМесяца(ТекСтрокаОсновныеНачисления.ДатаОкончания);
			
			Движение.БазовыйПериодНачало = НачалоМесяца(ТекСтрокаОсновныеНачисления.ДатаНачала);
			Движение.БазовыйПериодКонец = КонецМесяца(ТекСтрокаОсновныеНачисления.ДатаОкончания);
			
		Иначе
			
			Движение.ПериодДействияНачало = ТекСтрокаОсновныеНачисления.ДатаНачала;
			Движение.ПериодДействияКонец = КонецДня(ТекСтрокаОсновныеНачисления.ДатаОкончания);
			
		КонецЕсли;
		
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.Сотрудник = ТекСтрокаОсновныеНачисления.Сотрудник;
		Движение.Подразделение = ТекСтрокаОсновныеНачисления.Подразделение;
		Движение.ГрафикРаботы = ТекСтрокаОсновныеНачисления.ГрафикРаботы;
		Движение.Параметр1 = ТекСтрокаОсновныеНачисления.Размер;
		
	КонецЦикла;

	СторноЗаписи = Движения.ОсновныеНачисления.ПолучитьДополнение();
	
	Для каждого ЗаписьСторно ИЗ СторноЗаписи Цикл
		
		ДвижениеСторно = Движения.ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(ДвижениеСторно, ЗаписьСторно);
		
		ДвижениеСторно.Сторно = Истина;
		ДвижениеСторно.ПериодРегистрации = ЗаписьСторно.ПериодРегистрацииСторно;
		ДвижениеСторно.ПериодДействияНачало = ЗаписьСторно.ПериодДействияНачалоСторно;
		ДвижениеСторно.ПериодДействияКонец = ЗаписьСторно.ПериодДействияКонецСторно;
		
	КонецЦикла;
	
	Движения.Записать();
	
	РассчитатьОклад();
	РассчитатьКомпенсациюЗаОбед();
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
КонецПроцедуры

Функция РассчитатьОклад()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеЧасыФактическийПериодДействия, 0) КАК ЧасыФакт,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеДниПериодДействия, 0) КАК ДниПлан,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеДниФактическийПериодДействия, 0) КАК ДниФакт
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(Регистратор = &Регистратор И ВидРасчета = &ВидРасчетаОклад) КАК ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчетаОклад", ПланыВидовРасчета.ОсновныеНачисления.Оклад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для каждого Движение Из Движения.ОсновныеНачисления Цикл
		
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.Оклад Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		
		Выборка.Сбросить();
		Если  выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки") Тогда
		
			Движение.Параметр2 =  выборка.ЧасыФакт;
			Множитель = ?(Движение.Сторно, -1, 1);
			
			Движение.Результат = Множитель * Движение.Параметр1 * Движение.Параметр2;
			
		КонецЕсли;
			
	КонецЦикла;
	
	Движения.ОсновныеНачисления.Записать();
	
КонецФункции // РассчитатьОклад()

Функция РассчитатьКомпенсациюЗаОбед()

	
	Запрос = Новый Запрос;
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	ОсновныеНачисленияБазаОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ОсновныеНачисленияБазаОсновныеНачисления.РезультатБаза КАК База,
	|	ОсновныеНачисленияДанныеГрафика.ЗначениеДниПериодДействия КАК ДнейПлан,
	|	ОсновныеНачисленияДанныеГрафика.ЗначениеДниФактическийПериодДействия КАК ДнейФакт
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисления.БазаОсновныеНачисления(
	|			&Измерения,
	|			&Измерения,
	|			,
	|			Регистратор = &Регистратор
	|				И ВидРасчета = &ВидРасчетаОбеды) КАК ОсновныеНачисленияБазаОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
	|				Регистратор = &Регистратор
	|					И ВидРасчета = &ВидРасчетаОбеды) КАК ОсновныеНачисленияДанныеГрафика
	|		ПО ОсновныеНачисленияБазаОсновныеНачисления.НомерСтроки = ОсновныеНачисленияДанныеГрафика.НомерСтроки";
	
	Измерения = Новый массив;
	Измерения.Добавить("Сотрудник");
	Измерения.Добавить("Подразделение");
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("ВидРасчетаОбеды", ПланыВидовРасчета.ОсновныеНачисления.КомпенсацияЗаОбеды);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для каждого Движение Из Движения.ОсновныеНачисления Цикл
	
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.КомпенсацияЗаОбеды Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		Выборка.Сбросить();
		Если  выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки") Тогда
		
			Если НЕ Движение.Сторно Тогда
				Движение.Параметр1 =  выборка.ДнейПлан;
				Движение.Параметр3 =  выборка.База;
			КонецЕсли;
			
			Множитель = ?(Движение.Сторно, -1, 1);
			Движение.Параметр2 = Множитель * выборка.ДнейФакт;
			
			Если Движение.Параметр1 <> 0 Тогда
				Движение.Результат = Множитель * 0.05 * Движение.Параметр3 / Движение.Параметр1  * Движение.Параметр2;
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЦикла;

	Движения.ОсновныеНачисления.Записать();

КонецФункции // РассчитатьКомпенсациюЗаОбед()

