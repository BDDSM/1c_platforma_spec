
Процедура ОбработкаПроведения(Отказ, Режим)
	// регистр ОсновныеНачисления
	Движения.ОсновныеНачисления.Записывать = Истина;
	Для Каждого ТекСтрокаОсновныеНачисления Из ОсновныеНачисления Цикл
		Движение = Движения.ОсновныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаОсновныеНачисления.ВидРасчета;
		Движение.ПериодДействияНачало = ТекСтрокаОсновныеНачисления.ДатаНачала;
		Движение.ПериодДействияКонец = КонецДня(ТекСтрокаОсновныеНачисления.ДатаОкончания);
		Движение.ПериодРегистрации = Дата;
		Движение.Сотрудник = ТекСтрокаОсновныеНачисления.Сотрудник;
		Движение.Подразделение = ТекСтрокаОсновныеНачисления.Подразделение;
		Движение.График = ТекСтрокаОсновныеНачисления.График;
	КонецЦикла;
	
	ТаблицаДополнений = Движения.ОсновныеНачисления.ПолучитьДополнение();
	Для каждого СтрокаТаблицы Из ТаблицаДополнений Цикл
	
		Движение = Движения.ОсновныеНачисления.Добавить();
		Движение.Сторно = Истина;
		Движение.ВидРасчета = СтрокаТаблицы.ВидРасчета;
		
		Движение.ПериодДействияНачало = СтрокаТаблицы.ПериодДействияНачалоСторно;
		Движение.ПериодДействияКонец = СтрокаТаблицы.ПериодДействияКонецСторно;
		Движение.ПериодРегистрации = СтрокаТаблицы.ПериодРегистрацииСторно;
		
		Движение.Сотрудник = СтрокаТаблицы.Сотрудник;
		Движение.Подразделение = СтрокаТаблицы.Подразделение;
		Движение.График = СтрокаТаблицы.График;
		
		Движение.Размер = СтрокаТаблицы.Размер;
	КонецЦикла;
	
	Движения.Записать();
	
	//РАСЧЕТ ПО ОКЛАДУ
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеЧасыФактическийПериодДействия, 0) КАК Факт,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеЧасыПериодДействия, 0) КАК Норма,
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисленияДанныеГрафика.Подразделение КАК Подразделение
		|ПОМЕСТИТЬ ВТ_ДанныеГрафика
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
		|			Регистратор = &Регистратор
		|				И ВидРасчета = &ВидРасчета) КАК ОсновныеНачисленияДанныеГрафика
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ВТ_ДанныеГрафика.Факт КАК Факт,
		|	ВТ_ДанныеГрафика.Норма КАК Норма,
		|	ЕСТЬNULL(СведенияОСотрудникахСрезПоследних.Оклад, 0) КАК Оклад
		|ИЗ
		|	ВТ_ДанныеГрафика КАК ВТ_ДанныеГрафика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСотрудниках.СрезПоследних(
		|				&НачалоПериода,
		|				(Подразделение, Сотрудник) В
		|					(ВЫБРАТЬ
		|						ВТ_ДанныеГрафика.Подразделение,
		|						ВТ_ДанныеГрафика.Сотрудник
		|					ИЗ
		|						ВТ_ДанныеГрафика)) КАК СведенияОСотрудникахСрезПоследних
		|		ПО ВТ_ДанныеГрафика.Сотрудник = СведенияОСотрудникахСрезПоследних.Сотрудник
		|			И ВТ_ДанныеГрафика.Подразделение = СведенияОСотрудникахСрезПоследних.Подразделение";
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДляОклада = РезультатЗапроса.Выбрать();
	
	Для каждого СтрокаНабора Из Движения.ОсновныеНачисления Цикл
	
		Если СтрокаНабора.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.Оклад Тогда
			Продолжить;
		КонецЕсли;
		
		ВыборкаДляОклада.Сбросить();
		ВыборкаДляОклада.НайтиСледующий(СтрокаНабора.НомерСтроки, "НомерСтроки");
		
		Если СтрокаНабора.Сторно Тогда
		
			СтрокаНабора.Результат = ?(ВыборкаДляОклада.Норма = 0,0,
				-ВыборкаДляОклада.Оклад / ВыборкаДляОклада.Норма * ВыборкаДляОклада.Факт);
 
		Иначе
		
			СтрокаНабора.Результат = ?(ВыборкаДляОклада.Норма = 0,0,
				ВыборкаДляОклада.Оклад / ВыборкаДляОклада.Норма * ВыборкаДляОклада.Факт);
				
			СтрокаНабора.Размер = ВыборкаДляОклада.Оклад;
 
		КонецЕсли; 
		
		СтрокаНабора.Факт = ВыборкаДляОклада.Факт;
		
	КонецЦикла;
	
	
	//расчет больничного
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗНачениеДниФактическийПериодДействия, 0) КАК ДниБолезни,
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	Константы.СтавкаБольничного КАК СтавкаБольничного
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
		|			Регистратор = &регистратор
		|				И ВидРасчета = &ВидРасчета) КАК ОсновныеНачисленияДанныеГрафика,
		|	Константы КАК Константы";
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ОсновныеНачисления.Больничный);
	Запрос.УстановитьПараметр("регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДляБольничного = РезультатЗапроса.Выбрать();
	
	Для каждого СтрокаНабора Из Движения.ОсновныеНачисления Цикл
	
		Если СтрокаНабора.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.Больничный Тогда
			Продолжить;
		КонецЕсли;
		
		ВыборкаДляБольничного.Сбросить();
		ВыборкаДляБольничного.НайтиСледующий(СтрокаНабора.НомерСтроки, "НомерСтроки");
		
		СтрокаНабора.Результат = ВыборкаДляБольничного.СтавкаБольничного * ВыборкаДляБольничного.ДниБолезни;
		
		СтрокаНабора.Размер = ВыборкаДляБольничного.СтавкаБольничного;
		СтрокаНабора.Факт = ВыборкаДляБольничного.ДниБолезни;
		
	КонецЦикла;
	
	Движения.ОсновныеНачисления.Записать(,Истина);
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры
