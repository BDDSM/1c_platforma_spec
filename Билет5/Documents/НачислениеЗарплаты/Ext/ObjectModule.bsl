
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	ПериодРегистрации = НачалоМесяца(ПериодРегистрации);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ОсновныеНачисления.Записывать = Истина;
	Движения.ДополнительныеНачисления.Записывать = Истина;
	
	Для Каждого ТекСтрокаОсновныеНачисления Из ОсновныеНачисления Цикл
		Движение = Движения.ОсновныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаОсновныеНачисления.ВидРасчета;
		Движение.ПериодДействияНачало = ТекСтрокаОсновныеНачисления.ДатаНачала;
		Если ТекСтрокаОсновныеНачисления.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Штраф Тогда
			Движение.ПериодДействияКонец = ТекСтрокаОсновныеНачисления.ДатаОкончания;
			Движение.Параметр1 = (ТекСтрокаОсновныеНачисления.ДатаОкончания - ТекСтрокаОсновныеНачисления.ДатаНачала) / 60;
		Иначе
			Движение.ПериодДействияКонец = КонецДня(ТекСтрокаОсновныеНачисления.ДатаОкончания); 
		КонецЕсли;
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.Сотрудник = ТекСтрокаОсновныеНачисления.Сотрудник;
		Движение.Подразделение = ТекСтрокаОсновныеНачисления.Подразделение;
	КонецЦикла;

	Для Каждого ТекСтрокаДополнительныеНачисления Из ДополнительныеНачисления Цикл
		Движение = Движения.ДополнительныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаДополнительныеНачисления.ВидРасчета;
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.Сотрудник = ТекСтрокаДополнительныеНачисления.Сотрудник;
		Движение.Подразделение = ТекСтрокаДополнительныеНачисления.Подразделение;
		Движение.Параметр1 = ТекСтрокаДополнительныеНачисления.Размер;
	КонецЦикла;

	Движения.Записать();
	
	РассчитатьШтраф();
	РассчитатьОклад();
	РассчитатьПремию();
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
КонецПроцедуры

Процедура РассчитатьШтраф()
	
	Для Каждого Движение ИЗ Движения.ОсновныеНачисления Цикл
		
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.Штраф Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		Движение.Параметр2 = ЦЕЛ(Движение.Параметр1 / 15);
		Движение.Параметр3 = 100;
		Движение.Результат = Движение.Параметр2 * 100;
		
	КонецЦикла;
	
	Движения.ОсновныеНачисления.Записать(,Истина);
	
КонецПроцедуры


Процедура РассчитатьОклад()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК ЧасыПлан,
		|	ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК ЧасыФакт,
		|	ЕСТЬNULL(ТарифнаяСетка.Значение, 0) КАК Оклад
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
		|			Регистратор = &Ссылка
		|				И ВидРасчета = &Оклад) КАК ОсновныеНачисленияДанныеГрафика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарифнаяСетка КАК ТарифнаяСетка
		|		ПО ОсновныеНачисленияДанныеГрафика.Подразделение = ТарифнаяСетка.Подразделение
		|			И ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия >= ТарифнаяСетка.От
		|			И (ТарифнаяСетка.До = 0
		|				ИЛИ ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия < ТарифнаяСетка.До)";
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	
	Для Каждого Движение ИЗ Движения.ОсновныеНачисления Цикл
		
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.Оклад Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки") Тогда
			
			Движение.Параметр1 = Выборка.ЧасыФакт;
			Движение.Параметр2 = Выборка.ЧасыПлан;
			Движение.Параметр3 = Выборка.Оклад;
			Если Выборка.ЧасыПлан <> 0 Тогда
				Движение.Результат = Выборка.Оклад * Выборка.ЧасыФакт / Выборка.ЧасыПлан;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ОсновныеНачисления.Записать();
	
КонецПроцедуры

Процедура РассчитатьПремию()
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(УправленческийОбороты.СуммаОборот, 0) КАК СуммаПродаж,
		|	УправленческийОбороты.Субконто1 КАК Подразделение
		|ИЗ
		|	РегистрБухгалтерии.Управленческий.Обороты(
		|			&ПрошлыйМесяцНачало,
		|			&ПрошлыйМесяцКонец,
		|			,
		|			Счет = &СчетПокупатели,
		|			&CубПодразделение,
		|			Субконто1 В
		|				(ВЫБРАТЬ
		|					ДополнительныеНачисления.Подразделение КАК Подразделение
		|				ИЗ
		|					Документ.НачислениеЗарплаты.ДополнительныеНачисления КАК ДополнительныеНачисления
		|				ГДЕ
		|					ДополнительныеНачисления.Ссылка = &Ссылка
		|					И ДополнительныеНачисления.ВидРасчета = &Надбавка),
		|			,
		|			) КАК УправленческийОбороты";
	
	CубПодразделение = Новый Массив;
	CубПодразделение.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Подразделение);
	Запрос.УстановитьПараметр("CубПодразделение", CубПодразделение);
	
	Запрос.УстановитьПараметр("Надбавка", ПланыВидовРасчета.ДополнительныеНачисления.Надбавка);
	Запрос.УстановитьПараметр("ПрошлыйМесяцКонец", ПериодРегистрации - 1);
	Запрос.УстановитьПараметр("ПрошлыйМесяцНачало", НачалоМесяца(ПериодРегистрации - 1));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("СчетПокупатели", ПланыСчетов.Управленческий.Покупатели);
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	
	Для Каждого Движение ИЗ Движения.ДополнительныеНачисления Цикл
		
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ДополнительныеНачисления.Надбавка Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Движение.Подразделение, "Подразделение") Тогда
		
			Движение.Параметр2 = Выборка.СуммаПродаж;
			Движение.Результат = Движение.Параметр2 * Движение.Параметр1 / 100; 
		
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ДополнительныеНачисления.Записать();
	
КонецПроцедуры


