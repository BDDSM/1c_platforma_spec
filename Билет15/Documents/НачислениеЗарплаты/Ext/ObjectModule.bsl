
Процедура ОбработкаПроведения(Отказ, Режим)

	// регистр ОсновныеНачисления
	Движения.ОсновныеНачисления.Записывать = Истина;
	Для Каждого ТекСтрокаОсновныеНачисления Из ОсновныеНачисления Цикл
		Движение = Движения.ОсновныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаОсновныеНачисления.ВидРасчета;
		Движение.ПериодДействияНачало = ТекСтрокаОсновныеНачисления.ДатаНачала;
		Движение.ПериодДействияКонец = КонецДня(ТекСтрокаОсновныеНачисления.ДатаОкончания);
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.Сотрудник = ТекСтрокаОсновныеНачисления.Сотрудник;
		Если ТекСтрокаОсновныеНачисления.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Больничный Тогда
			
			Движение.Смена = Справочники.Смены.Пятидневка;
			Движение.БазовыйПериодНачало = НачалоМесяца(ПериодРегистрации-1);
			Движение.БазовыйПериодКонец = ПериодРегистрации-1;
			
		Иначе
			Движение.Смена = ТекСтрокаОсновныеНачисления.Смена;
		КонецЕсли;
	КонецЦикла;

	// регистр ДополнительныеНачисления
	Движения.ДополнительныеНачисления.Записывать = Истина;
	Для Каждого ТекСтрокаДополнительныеНачисления Из ДополнительныеНачисления Цикл
		Движение = Движения.ДополнительныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаДополнительныеНачисления.ВидРасчета;
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.Сотрудник = ТекСтрокаДополнительныеНачисления.Сотрудник;
		Движение.Результат = ТекСтрокаДополнительныеНачисления.Размер;
	КонецЦикла;

	ДвиженияДополнения = Движения.ОсновныеНачисления.ПолучитьДополнение();
	
	Для каждого Запись Из ДвиженияДополнения Цикл
	
		Движение = Движения.ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Запись);
		
		Движение.Сторно = Истина;
		Движение.ПериодРегистрации = Запись.ПериодРегистрацииСторно;
		ДВижение.ПериодДействияНачало = Запись.ПериодДействияНачалоСторно;
		ДВижение.ПериодДействияКонец = Запись.ПериодДействияКонецСторно;
		
	
	КонецЦикла;
	
	Движения.Записать();
	
	РассчитатьОклад();
	РассчитатьБольничный();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	ПериодРегистрации = НачалоМесяца(ПериодРегистрации);
КонецПроцедуры

Процедура РассчитатьОклад()

		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК ЧасыПлан,
		|	ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК ЧасыФакт,
		|	ОсновныеНачисленияДанныеГрафика.ЗначениеДниФактическийПериодДействия КАК ДниФакт
		|ПОМЕСТИТЬ ВТ_ДанныеГрафика
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(Регистратор = &Регистратор И ВидРасчета = &ВидРасчета) КАК ОсновныеНачисленияДанныеГрафика
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВТ_ДанныеГрафика.ЧасыПлан, 0) КАК ЧасыПлан,
		|	ЕСТЬNULL(ВТ_ДанныеГрафика.ЧасыФакт, 0) КАК ЧасыФакт,
		|	ЕСТЬNULL(ВТ_ДанныеГрафика.ДниФакт, 0) КАК ДниФакт,
		|	ЕСТЬNULL(СведенияОСотрудникахСрезПоследних.Оклад, 0) КАК Оклад
		|ИЗ
		|	ВТ_ДанныеГрафика КАК ВТ_ДанныеГрафика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСотрудниках.СрезПоследних(
		|				&ПериодРегистрации,
		|				Сотрудник В
		|					(ВЫБРАТЬ
		|						ВТ_ДанныеГрафика.Сотрудник КАК Сотрудник
		|					ИЗ
		|						ВТ_ДанныеГрафика КАК ВТ_ДанныеГрафика)) КАК СведенияОСотрудникахСрезПоследних
		|		ПО ВТ_ДанныеГрафика.Сотрудник = СведенияОСотрудникахСрезПоследних.Сотрудник";
	
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для каждого Движение Из Движения.ОсновныеНачисления Цикл
	
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.Оклад Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки") Тогда
		
			Движение.Параметр1 = Выборка.Оклад;
			Движение.Параметр2 = Выборка.ЧасыПлан;
			Движение.Параметр3 = Выборка.ЧасыФакт;
			
			Движение.ДниРаботы = Выборка.ДниФакт;
			
			Если Выборка.ЧасыПлан <> 0 Тогда
				Движение.Результат = Выборка.ЧасыФакт / Выборка.ЧасыПлан * Выборка.Оклад;
			КонецЕсли;
			
			Если Движение.Сторно Тогда
				Движение.Результат = -Движение.Результат;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;

	движения.ОсновныеНачисления.Записать();
	
КонецПроцедуры

Процедура РассчитатьБольничный()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияБазаОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисленияБазаОсновныеНачисления.РезультатБаза КАК РезультатБаза,
		|	ОсновныеНачисленияБазаОсновныеНачисления.ДниРаботыБаза КАК ДниРаботыБаза,
		|	ОсновныеНачисленияБазаДополнительныеНачисления.РезультатБаза КАК РезультатБазаДоп
		|ПОМЕСТИТЬ ВТ_База
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.БазаОсновныеНачисления(&Измерения, &Измерения, , Регистратор = &Регистратор) КАК ОсновныеНачисленияБазаОсновныеНачисления
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисления.БазаДополнительныеНачисления(&Измерения, &Измерения, , Регистратор = &Регистратор) КАК ОсновныеНачисленияБазаДополнительныеНачисления
		|		ПО ОсновныеНачисленияБазаОсновныеНачисления.НомерСтроки = ОсновныеНачисленияБазаДополнительныеНачисления.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисленияДанныеГрафика.ЗначениеДниФактическийПериодДействия КАК ДниБолезни,
		|	ISNULL(ВТ_База.РезультатБаза, 0) КАК РезультатБаза,
		|	ISNULL(ВТ_База.ДниРаботыБаза, 0) КАК ДниРаботыБаза,
		|	ISNULL(ВТ_База.РезультатБазаДоп, 0) КАК РезультатБазаДоп
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
		|			Регистратор = &Регистратор
		|				И ВидРасчета = &ВидРасчета) КАК ОсновныеНачисленияДанныеГрафика
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_База КАК ВТ_База
		|		ПО ОсновныеНачисленияДанныеГрафика.НомерСтроки = ВТ_База.НомерСтроки";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ОсновныеНачисления.Больничный);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для каждого Движение Из Движения.ОсновныеНачисления Цикл
	
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.Больничный Тогда
		
			Продолжить;
		
		КонецЕсли;
	
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки") Тогда
		
			Движение.Параметр1 = Выборка.РезультатБаза;
			Движение.Параметр2 = Выборка.РезультатБазаДоп;
			Движение.Параметр3 = Выборка.ДниРаботыБаза;
			
			Движение.ДниРаботы = Выборка.ДниБолезни;
			
			Если Выборка.ДниРаботыБаза <> 0 Тогда
				Движение.Результат = (Выборка.РезультатБаза + Выборка.РезультатБазаДоп)  / Выборка.ДниРаботыБаза * Выборка.ДниБолезни;
			КонецЕсли;
			
			Если Движение.Сторно Тогда
				Движение.Результат = -Движение.Результат;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;

	движения.ОсновныеНачисления.Записать();
	
КонецПроцедуры

