
Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОсновныеНачисления.Записывать = Истина;
	Движения.ДополнительныеНачисления.Записывать = Истина;
	
	Для Каждого ТекСтрокаОсновныеНачисления Из ОсновныеНачисления Цикл
		Движение = Движения.ОсновныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаОсновныеНачисления.ВидРасчета;
		Движение.ПериодДействияНачало = ТекСтрокаОсновныеНачисления.ДатаНачала;
		Движение.ПериодДействияКонец = КонецДня(ТекСтрокаОсновныеНачисления.ДатаОкончания);
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.Сотрудник = ТекСтрокаОсновныеНачисления.Сотрудник;
		Движение.Подразделение = ТекСтрокаОсновныеНачисления.Подразделение;
		Движение.ГрафикРаботы = Справочники.ГрафикиРаботы.Пятидневка;
	КонецЦикла;


	Для Каждого ТекСтрокаДополнительныеНачисления Из ДополнительныеНачисления Цикл
		Движение = Движения.ДополнительныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаДополнительныеНачисления.ВидРасчета;
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.БазовыйПериодНачало = НачалоМесяца(ПериодРегистрации);
		Движение.БазовыйПериодКонец = КонецМесяца(ПериодРегистрации);
		Движение.Сотрудник = ТекСтрокаДополнительныеНачисления.Сотрудник;
		Движение.Подразделение = ТекСтрокаДополнительныеНачисления.Подразделение;
		Движение.Параметр1 = ТекСтрокаДополнительныеНачисления.Размер;
	КонецЦикла;

	Движения.Записать();
	
	РассчитатьОклад();
	РассчитатьПремию();
	
КонецПроцедуры


Процедура РассчитатьОклад()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) КАК ЧасыПлан,
	|	ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
	|	ОсновныеНачисленияДанныеГрафика.Подразделение КАК Подразделение,
	|	ОсновныеНачисленияДанныеГрафика.ПериодДействияНачало КАК ПериодДействияНачало,
	|	НАЧАЛОПЕРИОДА(ОсновныеНачисленияДанныеГрафика.ПериодДействияКонец, ДЕНЬ) КАК ПериодДействияКонец
	|ПОМЕСТИТЬ ВТ_ДанныеГрафика
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(Регистратор = &Регистратор) КАК ОсновныеНачисленияДанныеГрафика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ВТ_ДанныеГрафика.ЧасыПлан КАК ЧасыПлан,
	|	СУММА(ЕСТЬNULL(РаботчееВремяСотрудниковОбороты.КоличествоОборот, 0)) КАК ЧасыФакт,
	|	ЕСТЬNULL(СведенияОСотрудникахСрезПоследних.Оклад, 0) КАК Оклад
	|ИЗ
	|	ВТ_ДанныеГрафика КАК ВТ_ДанныеГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РаботчееВремяСотрудников.Обороты(
	|				&НачалоМесяца,
	|				&КонецМесяца,
	|				День,
	|				Сотрудник В
	|					(ВЫБРАТЬ
	|						ВТ_ДанныеГрафика.Сотрудник КАК Сотрудник
	|					ИЗ
	|						ВТ_ДанныеГрафика КАК ВТ_ДанныеГрафика)) КАК РаботчееВремяСотрудниковОбороты
	|		ПО ВТ_ДанныеГрафика.Сотрудник = РаботчееВремяСотрудниковОбороты.Сотрудник
	|			И (РаботчееВремяСотрудниковОбороты.Период МЕЖДУ ВТ_ДанныеГрафика.ПериодДействияНачало И ВТ_ДанныеГрафика.ПериодДействияКонец)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСотрудниках.СрезПоследних(
	|				&НачалоМесяца,
	|				(Сотрудник, Подразделение) В
	|					(ВЫБРАТЬ
	|						ВТ_ДанныеГрафика.Сотрудник КАК Сотрудник,
	|						ВТ_ДанныеГрафика.Подразделение КАК Подразделение
	|					ИЗ
	|						ВТ_ДанныеГрафика КАК ВТ_ДанныеГрафика)) КАК СведенияОСотрудникахСрезПоследних
	|		ПО ВТ_ДанныеГрафика.Сотрудник = СведенияОСотрудникахСрезПоследних.Сотрудник
	|			И ВТ_ДанныеГрафика.Подразделение = СведенияОСотрудникахСрезПоследних.Подразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДанныеГрафика.НомерСтроки,
	|	ВТ_ДанныеГрафика.ЧасыПлан,
	|	СведенияОСотрудникахСрезПоследних.Оклад";
	
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для каждого Движение Из Движения.ОсновныеНачисления Цикл
	
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ОсновныеНачисления.Оклад Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки") Тогда
		
			Движение.Параметр1 = Выборка.Оклад;
			Движение.Параметр2 = Выборка.ЧасыПлан;
			Движение.Параметр3 = Выборка.ЧасыФакт;
			
			Если Выборка.ЧасыПлан > 0 Тогда
				ДВижение.Результат = Выборка.Оклад / Выборка.ЧасыПлан * Выборка.ЧасыФакт;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ОсновныеНачисления.Записать();
	
КонецПроцедуры

Процедура РассчитатьПремию()
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДополнительныеНачисленияБазаОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ДополнительныеНачисленияБазаОсновныеНачисления.РезультатБаза КАК РезультатБаза
		|ИЗ
		|	РегистрРасчета.ДополнительныеНачисления.БазаОсновныеНачисления(&Подразделение, &Подразделение, , Регистратор = &Регистратор) КАК ДополнительныеНачисленияБазаОсновныеНачисления";
	
	Подразделение = Новый Массив;
	Подразделение.Добавить("Подразделение");
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Для каждого Движение Из Движения.ДополнительныеНачисления Цикл
	
		Если Движение.ВидРасчета <> ПланыВидовРасчета.ДополнительныеНачисления.Премия Тогда
		
			Продолжить;
		
		КонецЕсли;
	
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки") Тогда
		
			Движение.Параметр2 = Выборка.РезультатБаза;
			
			ДВижение.Результат = Выборка.РезультатБаза * Движение.Параметр1 / 100;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ДополнительныеНачисления.Записать();
	
КонецПроцедуры
