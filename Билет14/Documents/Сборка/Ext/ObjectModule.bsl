
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.Управленческий.Записывать = Истина;
	Движения.Управленческий.Записать();
	
	// определим вид сборки
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СборкаСостав.Номенклатура КАК Номенклатура,
	|	СборкаСостав.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ_ДанныеДок
	|ИЗ
	|	Документ.Сборка.Состав КАК СборкаСостав
	|ГДЕ
	|	СборкаСостав.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоставыКомплектов.Номенклатура КАК Номенклатура,
	|	СоставыКомплектов.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ_СоставЭталон
	|ИЗ
	|	РегистрСведений.СоставыКомплектов КАК СоставыКомплектов
	|ГДЕ
	|	СоставыКомплектов.Комплект = &Комплект
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_ДанныеДок.Номенклатура, ВТ_СоставЭталон.Номенклатура) КАК Номенклатура,
	|	СУММА(ЕСТЬNULL(ВТ_ДанныеДок.Количество, 0)) КАК КоличествоДокумент,
	|	СУММА(ЕСТЬNULL(ВТ_СоставЭталон.Количество, 0)) КАК КоличествоЭталон
	|ИЗ
	|	ВТ_ДанныеДок КАК ВТ_ДанныеДок
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_СоставЭталон КАК ВТ_СоставЭталон
	|		ПО ВТ_ДанныеДок.Номенклатура = ВТ_СоставЭталон.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВТ_ДанныеДок.Номенклатура, ВТ_СоставЭталон.Номенклатура)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Комплект", Комплект);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ВидСборки = Перечисления.ВидыСборки.Стандарт;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.КоличествоДокумент <> ВыборкаДетальныеЗаписи.КоличествоЭталон Тогда
			ВидСборки = Перечисления.ВидыСборки.Нестандарт;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрБухгалтерии.Управленческий");
	ЭлементБлокировки.УстановитьЗначение("Счет", ПланыСчетов.Управленческий.Материалы);
	ЭлементБлокировки.УстановитьЗначение(ПланыВидовХарактеристик.ВидыСубконто.Склад, СкладМатериалов);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Состав;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура, "Номенклатура");
	Блокировка.Заблокировать();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТ_ДанныеДок.Номенклатура КАК Номенклатура,
	|	ПРЕДСТАВЛЕНИЕ(ВТ_ДанныеДок.Номенклатура) КАК НоменклатураПредставление,
	|	ВТ_ДанныеДок.Количество КАК КоличествоДок,
	|	ЕСТЬNULL(УправленческийОстатки.КоличествоОстаток, 0) КАК Количество,
	|	ЕСТЬNULL(УправленческийОстатки.СуммаОстаток, 0) КАК Себестоимость
	|ИЗ
	|	ВТ_ДанныеДок КАК ВТ_ДанныеДок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Остатки(
	|				&МоментВремени,
	|				Счет = &СчетМатериалы,
	|				&СубконтоСкладНоменклатура,
	|				Субконто1 = &СкладМатериалов
	|					И Субконто2 В
	|						(ВЫБРАТЬ
	|							ВТ_ДанныеДок.Номенклатура КАК Номенклатура
	|						ИЗ
	|							ВТ_ДанныеДок КАК ВТ_ДанныеДок)) КАК УправленческийОстатки
	|		ПО ВТ_ДанныеДок.Номенклатура = УправленческийОстатки.Субконто2";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("СкладМатериалов", СкладМатериалов);
	СубконтоСкладНоменклатура = новый Массив;
	СубконтоСкладНоменклатура.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Склад);
	СубконтоСкладНоменклатура.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура);
	Запрос.УстановитьПараметр("СубконтоСкладНоменклатура", СубконтоСкладНоменклатура);
	Запрос.УстановитьПараметр("СчетМатериалы", ПланыСчетов.Управленческий.Материалы);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	СебестоимостьКомплекта = 0;
	Пока Выборка.Следующий() Цикл
		
		НеХватает = Выборка.КоличествоДок - Выборка.Количество;
		Если НеХватает > 0 Тогда
			
			Отказ = Истина;
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон("Не хвататет товара %1 в количестве %2", Выборка.НоменклатураПредставление, НеХватает);
			Сообщение.Сообщить();
			
		КонецЕсли;
		
		Если Отказ Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		Себестоимость = Выборка.КоличествоДок / Выборка.Количество * Выборка.Себестоимость;
		
		Движение = Движения.Управленческий.Добавить();
		Движение.СчетДт = ПланыСчетов.Управленческий.ОсновноеПроизводство;
		Движение.СчетКт = ПланыСчетов.Управленческий.Материалы;
		Движение.Период = Дата;
		Движение.Сумма = Себестоимость;
		Движение.КоличествоКт = Выборка.КоличествоДок;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Комплект;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Выборка.Номенклатура;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Склад] = СкладМатериалов;
		
		СебестоимостьКомплекта = СебестоимостьКомплекта + Себестоимость;
		
	КонецЦикла;
	
	Движение = Движения.Управленческий.Добавить();
	Движение.СчетДт = ПланыСчетов.Управленческий.Товары;
	Движение.СчетКт = ПланыСчетов.Управленческий.ОсновноеПроизводство;
	Движение.Период = Дата;
	Движение.Сумма = СебестоимостьКомплекта;
	Движение.КоличествоДт = 1;
	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Склад] = СкладГотовойПродукции;
	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Комплект;
	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.ВидСборки] = ВидСборки;
	Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Комплект;
		
КонецПроцедуры
