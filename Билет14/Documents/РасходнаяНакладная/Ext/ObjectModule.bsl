
Процедура ОбработкаПроведения(Отказ, Режим)
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Валюта", Валюта);
	ДанныеКурса = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(МоментВремени(), ПараметрыОтбора);
	Курс = ДанныеКурса.Курс;
	Если НЕ ЗначениеЗаполнено(Курс) Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не указан курс валюты!";
		Сообщение.Сообщить();
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Движения.ДолгиПоДокументам.Записывать = Истина;
	Движения.ДолгиПоДокументам.Записать();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ДолгиПоДокументам");
	ЭлементБлокировки.УстановитьЗначение("Контрагент", Контрагент);
	ЭлементБлокировки.УстановитьЗначение("Документ", Документы.РасходнаяНакладная.ПустаяСсылка());
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДолгиПоДокументамОстатки.Документ КАК Документ,
		|	ПРЕДСТАВЛЕНИЕ(ДолгиПоДокументамОстатки.Документ.Валюта) КАК ВалютаПредставление,
		|	ДолгиПоДокументамОстатки.СуммаОстаток КАК СуммаОстаток
		|ИЗ
		|	РегистрНакопления.ДолгиПоДокументам.Остатки(&МоментВремени, Контрагент = &Контрагент И Документ = ЗНАЧЕНИЕ(Документ.РасходнаяНакладная.ПустаяСсылка)) КАК ДолгиПоДокументамОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДолгиПоДокументамОстатки.Документ.МоментВремени";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("РоссийскийРубль", Справочники.Валюты.РоссийскийРубль);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		СуммаАванса = ВыборкаДетальныеЗаписи.СуммаОстаток;
		
	Иначе
		
		СуммаАванса = 0;
		
	КонецЕсли;
	
	СуммаДолгаВалюта = СуммаПоДокументу;
	Если СуммаАванса > 0 Тогда
		
		СуммаДолгаРубли = Окр(СуммаДолгаВалюта * Курс, 2); 
		
		СуммаКСписаниюРубли  = МИН(СуммаДолгаРубли, СуммаАванса);
		
		СуммаКСписаниюВалюта = ?(СуммаКСписаниюРубли = СуммаДолгаРубли, 
			СуммаДолгаВалюта,
			Окр(СуммаКСписаниюРубли / Курс, 2));
		
		Движение = Движения.ДолгиПоДокументам.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Валюта = Справочники.Валюты.РоссийскийРубль;
		Движение.Сумма = СуммаКСписаниюРубли;
		
		Движение = Движения.ДолгиПоДокументам.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Валюта = Валюта;
		Движение.Сумма = СуммаКСписаниюВалюта;
		
		Движение = Движения.ДолгиПоДокументам.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Валюта = Валюта;
		Движение.Сумма = СуммаКСписаниюВалюта;
		
		СуммаДолгаВалюта = СуммаДолгаВалюта - СуммаКСписаниюВалюта;
		
	КонецЕсли;
	
	Если СуммаДолгаВалюта > 0 Тогда	
		Движение = Движения.ДолгиПоДокументам.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Документ = Ссылка;
		Движение.Валюта = Валюта;
		Движение.Сумма = СуммаДолгаВалюта;
	КонецЕсли;
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
КонецПроцедуры
